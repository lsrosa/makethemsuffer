//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Tue Feb 14 19:47:56 2017
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Tue Nov  7 15:26:36 2017
//----------------------------------------------------------------------------//

--------------------------------------------------------------------------------
Function: main
--------------------------------------------------------------------------------
Function unit type:           Number Required               
aa_local_mem_dual_port        1                             
b_local_mem_dual_port         2                             
bb_local_mem_dual_port        1                             
c_local_mem_dual_port         2                             
cc_local_mem_dual_port        1                             
d_local_mem_dual_port         2                             
dd_local_mem_dual_port        2                             
e_local_mem_dual_port         2                             
f_local_mem_dual_port         2                             
g_local_mem_dual_port         2                             
h_local_mem_dual_port         2                             
ii_local_mem_dual_port        2                             
j_local_mem_dual_port         2                             

Running Bipartite Weighted Matching on function: main
State: pipeline_time_0
Binding functional unit type: aa_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_aa_local_mem_dual_port_0 
  store volatile i32 %104, i32... (idx: 0)        20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_aa_local_mem_dual_port_0 
  store volatile i32 %104, i32... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile i32 %104, i32... (idx: 0) -> main_aa_local_mem_dual_port_0 (mux inputs: 2)
State: pipeline_time_0
Binding functional unit type: b_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_b_local_mem_dual_port_0  main_b_local_mem_dual_port_1  
  %14 = load volatile i32* %sc... (idx: 0)        10                            10                            
  %15 = load volatile i32* %sc... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_b_local_mem_dual_port_0  main_b_local_mem_dual_port_1  
  %14 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %15 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %14 = load volatile i32* %sc... (idx: 0) -> main_b_local_mem_dual_port_0 (mux inputs: 1)
  %15 = load volatile i32* %sc... (idx: 1) -> main_b_local_mem_dual_port_1 (mux inputs: 1)
State: pipeline_time_0
Binding functional unit type: bb_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_bb_local_mem_dual_port_0 
  store volatile i32 %96, i32*... (idx: 0)        20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_bb_local_mem_dual_port_0 
  store volatile i32 %96, i32*... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile i32 %96, i32*... (idx: 0) -> main_bb_local_mem_dual_port_0 (mux inputs: 2)
State: pipeline_time_0
Binding functional unit type: c_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_c_local_mem_dual_port_0  main_c_local_mem_dual_port_1  
  %16 = load volatile i32* %sc... (idx: 0)        10                            10                            
  %17 = load volatile i32* %sc... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_c_local_mem_dual_port_0  main_c_local_mem_dual_port_1  
  %16 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %17 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %16 = load volatile i32* %sc... (idx: 0) -> main_c_local_mem_dual_port_0 (mux inputs: 1)
  %17 = load volatile i32* %sc... (idx: 1) -> main_c_local_mem_dual_port_1 (mux inputs: 1)
State: pipeline_time_0
Binding functional unit type: cc_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_cc_local_mem_dual_port_0 
  store volatile i32 %107, i32... (idx: 0)        20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_cc_local_mem_dual_port_0 
  store volatile i32 %107, i32... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile i32 %107, i32... (idx: 0) -> main_cc_local_mem_dual_port_0 (mux inputs: 2)
State: pipeline_time_0
Binding functional unit type: d_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_d_local_mem_dual_port_0  main_d_local_mem_dual_port_1  
  %18 = load volatile i32* %sc... (idx: 0)        10                            10                            
  %19 = load volatile i32* %sc... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_d_local_mem_dual_port_0  main_d_local_mem_dual_port_1  
  %18 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %19 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %18 = load volatile i32* %sc... (idx: 0) -> main_d_local_mem_dual_port_0 (mux inputs: 1)
  %19 = load volatile i32* %sc... (idx: 1) -> main_d_local_mem_dual_port_1 (mux inputs: 1)
State: pipeline_time_0
Binding functional unit type: dd_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_dd_local_mem_dual_port_0 main_dd_local_mem_dual_port_1 
  %50 = load volatile i32* %sc... (idx: 0)        10                            10                            
  %108 = load volatile i32* %s... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dd_local_mem_dual_port_0 main_dd_local_mem_dual_port_1 
  %50 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %108 = load volatile i32* %s... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %50 = load volatile i32* %sc... (idx: 0) -> main_dd_local_mem_dual_port_0 (mux inputs: 1)
  %108 = load volatile i32* %s... (idx: 1) -> main_dd_local_mem_dual_port_1 (mux inputs: 1)
State: pipeline_time_0
Binding functional unit type: e_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_e_local_mem_dual_port_0  main_e_local_mem_dual_port_1  
  %20 = load volatile i32* %sc... (idx: 0)        10                            10                            
  %79 = load volatile i32* %sc... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_e_local_mem_dual_port_0  main_e_local_mem_dual_port_1  
  %20 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %79 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %20 = load volatile i32* %sc... (idx: 0) -> main_e_local_mem_dual_port_0 (mux inputs: 1)
  %79 = load volatile i32* %sc... (idx: 1) -> main_e_local_mem_dual_port_1 (mux inputs: 1)
State: pipeline_time_0
Binding functional unit type: f_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_f_local_mem_dual_port_0  main_f_local_mem_dual_port_1  
  %23 = load volatile i32* %sc... (idx: 0)        10                            10                            
  %24 = load volatile i32* %sc... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_f_local_mem_dual_port_0  main_f_local_mem_dual_port_1  
  %23 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %24 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %23 = load volatile i32* %sc... (idx: 0) -> main_f_local_mem_dual_port_0 (mux inputs: 1)
  %24 = load volatile i32* %sc... (idx: 1) -> main_f_local_mem_dual_port_1 (mux inputs: 1)
State: pipeline_time_0
Binding functional unit type: g_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_g_local_mem_dual_port_0  main_g_local_mem_dual_port_1  
  %25 = load volatile i32* %sc... (idx: 0)        10                            10                            
  %83 = load volatile i32* %sc... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_g_local_mem_dual_port_0  main_g_local_mem_dual_port_1  
  %25 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %83 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %25 = load volatile i32* %sc... (idx: 0) -> main_g_local_mem_dual_port_0 (mux inputs: 1)
  %83 = load volatile i32* %sc... (idx: 1) -> main_g_local_mem_dual_port_1 (mux inputs: 1)
State: pipeline_time_0
Binding functional unit type: h_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_h_local_mem_dual_port_0  main_h_local_mem_dual_port_1  
  %27 = load volatile i32* %sc... (idx: 0)        10                            10                            
  %28 = load volatile i32* %sc... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_h_local_mem_dual_port_0  main_h_local_mem_dual_port_1  
  %27 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %28 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %27 = load volatile i32* %sc... (idx: 0) -> main_h_local_mem_dual_port_0 (mux inputs: 1)
  %28 = load volatile i32* %sc... (idx: 1) -> main_h_local_mem_dual_port_1 (mux inputs: 1)
State: pipeline_time_0
Binding functional unit type: ii_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_ii_local_mem_dual_port_0 main_ii_local_mem_dual_port_1 
  %29 = load volatile i32* %sc... (idx: 0)        10                            10                            
  %87 = load volatile i32* %sc... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_ii_local_mem_dual_port_0 main_ii_local_mem_dual_port_1 
  %29 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %87 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %29 = load volatile i32* %sc... (idx: 0) -> main_ii_local_mem_dual_port_0 (mux inputs: 1)
  %87 = load volatile i32* %sc... (idx: 1) -> main_ii_local_mem_dual_port_1 (mux inputs: 1)
State: pipeline_time_0
Binding functional unit type: j_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_j_local_mem_dual_port_0  main_j_local_mem_dual_port_1  
  %30 = load volatile i32* %sc... (idx: 0)        10                            10                            
  %31 = load volatile i32* %sc... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_j_local_mem_dual_port_0  main_j_local_mem_dual_port_1  
  %30 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %31 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %30 = load volatile i32* %sc... (idx: 0) -> main_j_local_mem_dual_port_0 (mux inputs: 1)
  %31 = load volatile i32* %sc... (idx: 1) -> main_j_local_mem_dual_port_1 (mux inputs: 1)
State: pipeline_time_1
Binding functional unit type: b_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %73 = load volatile i32* %sc... can share an input with another operation already assigned to main_b_local_mem_dual_port_0
  %74 = load volatile i32* %sc... can share an input with another operation already assigned to main_b_local_mem_dual_port_1
                                                  main_b_local_mem_dual_port_0  main_b_local_mem_dual_port_1  
  %73 = load volatile i32* %sc... (idx: 0)        1                             11                            
  %74 = load volatile i32* %sc... (idx: 1)        11                            1                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_b_local_mem_dual_port_0  main_b_local_mem_dual_port_1  
  %73 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %74 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %73 = load volatile i32* %sc... (idx: 0) -> main_b_local_mem_dual_port_0 (mux inputs: 1)
  %74 = load volatile i32* %sc... (idx: 1) -> main_b_local_mem_dual_port_1 (mux inputs: 1)
State: pipeline_time_1
Binding functional unit type: c_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %75 = load volatile i32* %sc... can share an input with another operation already assigned to main_c_local_mem_dual_port_0
  %76 = load volatile i32* %sc... can share an input with another operation already assigned to main_c_local_mem_dual_port_1
                                                  main_c_local_mem_dual_port_0  main_c_local_mem_dual_port_1  
  %75 = load volatile i32* %sc... (idx: 0)        1                             11                            
  %76 = load volatile i32* %sc... (idx: 1)        11                            1                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_c_local_mem_dual_port_0  main_c_local_mem_dual_port_1  
  %75 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %76 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %75 = load volatile i32* %sc... (idx: 0) -> main_c_local_mem_dual_port_0 (mux inputs: 1)
  %76 = load volatile i32* %sc... (idx: 1) -> main_c_local_mem_dual_port_1 (mux inputs: 1)
State: pipeline_time_1
Binding functional unit type: d_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %77 = load volatile i32* %sc... can share an input with another operation already assigned to main_d_local_mem_dual_port_0
  %78 = load volatile i32* %sc... can share an input with another operation already assigned to main_d_local_mem_dual_port_1
                                                  main_d_local_mem_dual_port_0  main_d_local_mem_dual_port_1  
  %77 = load volatile i32* %sc... (idx: 0)        1                             11                            
  %78 = load volatile i32* %sc... (idx: 1)        11                            1                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_d_local_mem_dual_port_0  main_d_local_mem_dual_port_1  
  %77 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %78 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %77 = load volatile i32* %sc... (idx: 0) -> main_d_local_mem_dual_port_0 (mux inputs: 1)
  %78 = load volatile i32* %sc... (idx: 1) -> main_d_local_mem_dual_port_1 (mux inputs: 1)
State: pipeline_time_1
Binding functional unit type: dd_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_dd_local_mem_dual_port_0 main_dd_local_mem_dual_port_1 
  %13 = load volatile i32* %sc... (idx: 0)        11                            11                            
  store volatile i32 %70, i32*... (idx: 1)        21                            21                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dd_local_mem_dual_port_0 main_dd_local_mem_dual_port_1 
  %13 = load volatile i32* %sc... (idx: 0)        1                             0                             
  store volatile i32 %70, i32*... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %13 = load volatile i32* %sc... (idx: 0) -> main_dd_local_mem_dual_port_0 (mux inputs: 2)
  store volatile i32 %70, i32*... (idx: 1) -> main_dd_local_mem_dual_port_1 (mux inputs: 3)
State: pipeline_time_1
Binding functional unit type: e_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_e_local_mem_dual_port_0  main_e_local_mem_dual_port_1  
  %22 = load volatile i32* %sc... (idx: 0)        11                            11                            
  %80 = load volatile i32* %sc... (idx: 1)        11                            11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_e_local_mem_dual_port_0  main_e_local_mem_dual_port_1  
  %22 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %80 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %22 = load volatile i32* %sc... (idx: 0) -> main_e_local_mem_dual_port_0 (mux inputs: 2)
  %80 = load volatile i32* %sc... (idx: 1) -> main_e_local_mem_dual_port_1 (mux inputs: 2)
State: pipeline_time_1
Binding functional unit type: f_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %81 = load volatile i32* %sc... can share an input with another operation already assigned to main_f_local_mem_dual_port_0
  %82 = load volatile i32* %sc... can share an input with another operation already assigned to main_f_local_mem_dual_port_1
                                                  main_f_local_mem_dual_port_0  main_f_local_mem_dual_port_1  
  %81 = load volatile i32* %sc... (idx: 0)        1                             11                            
  %82 = load volatile i32* %sc... (idx: 1)        11                            1                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_f_local_mem_dual_port_0  main_f_local_mem_dual_port_1  
  %81 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %82 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %81 = load volatile i32* %sc... (idx: 0) -> main_f_local_mem_dual_port_0 (mux inputs: 1)
  %82 = load volatile i32* %sc... (idx: 1) -> main_f_local_mem_dual_port_1 (mux inputs: 1)
State: pipeline_time_1
Binding functional unit type: g_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_g_local_mem_dual_port_0  main_g_local_mem_dual_port_1  
  %26 = load volatile i32* %sc... (idx: 0)        11                            11                            
  %84 = load volatile i32* %sc... (idx: 1)        11                            11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_g_local_mem_dual_port_0  main_g_local_mem_dual_port_1  
  %26 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %84 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %26 = load volatile i32* %sc... (idx: 0) -> main_g_local_mem_dual_port_0 (mux inputs: 2)
  %84 = load volatile i32* %sc... (idx: 1) -> main_g_local_mem_dual_port_1 (mux inputs: 2)
State: pipeline_time_1
Binding functional unit type: h_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %85 = load volatile i32* %sc... can share an input with another operation already assigned to main_h_local_mem_dual_port_0
  %86 = load volatile i32* %sc... can share an input with another operation already assigned to main_h_local_mem_dual_port_1
                                                  main_h_local_mem_dual_port_0  main_h_local_mem_dual_port_1  
  %85 = load volatile i32* %sc... (idx: 0)        1                             11                            
  %86 = load volatile i32* %sc... (idx: 1)        11                            1                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_h_local_mem_dual_port_0  main_h_local_mem_dual_port_1  
  %85 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %86 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %85 = load volatile i32* %sc... (idx: 0) -> main_h_local_mem_dual_port_0 (mux inputs: 1)
  %86 = load volatile i32* %sc... (idx: 1) -> main_h_local_mem_dual_port_1 (mux inputs: 1)
State: pipeline_time_1
Binding functional unit type: j_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %88 = load volatile i32* %sc... can share an input with another operation already assigned to main_j_local_mem_dual_port_0
  %89 = load volatile i32* %sc... can share an input with another operation already assigned to main_j_local_mem_dual_port_1
                                                  main_j_local_mem_dual_port_0  main_j_local_mem_dual_port_1  
  %88 = load volatile i32* %sc... (idx: 0)        1                             11                            
  %89 = load volatile i32* %sc... (idx: 1)        11                            1                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_j_local_mem_dual_port_0  main_j_local_mem_dual_port_1  
  %88 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %89 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %88 = load volatile i32* %sc... (idx: 0) -> main_j_local_mem_dual_port_0 (mux inputs: 1)
  %89 = load volatile i32* %sc... (idx: 1) -> main_j_local_mem_dual_port_1 (mux inputs: 1)
State: pipeline_time_2
Binding functional unit type: dd_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %12 = load volatile i32* %sc... can share an output register with another operation already assigned to main_dd_local_mem_dual_port_0
  %12 = load volatile i32* %sc... can share an output register with another operation already assigned to main_dd_local_mem_dual_port_1
  store volatile i32 %128, i32... can share an output register with another operation already assigned to main_dd_local_mem_dual_port_0
  store volatile i32 %128, i32... can share an input with another operation already assigned to main_dd_local_mem_dual_port_1
  store volatile i32 %128, i32... can share an output register with another operation already assigned to main_dd_local_mem_dual_port_1
                                                  main_dd_local_mem_dual_port_0 main_dd_local_mem_dual_port_1 
  %12 = load volatile i32* %sc... (idx: 0)        7                             8                             
  store volatile i32 %128, i32... (idx: 1)        17                            8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dd_local_mem_dual_port_0 main_dd_local_mem_dual_port_1 
  %12 = load volatile i32* %sc... (idx: 0)        1                             0                             
  store volatile i32 %128, i32... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %12 = load volatile i32* %sc... (idx: 0) -> main_dd_local_mem_dual_port_0 (mux inputs: 3)
  store volatile i32 %128, i32... (idx: 1) -> main_dd_local_mem_dual_port_1 (mux inputs: 4)
State: pipeline_time_3
Binding functional unit type: aa_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile i32 %46, i32*... can share an input with another operation already assigned to main_aa_local_mem_dual_port_0
  store volatile i32 %46, i32*... can share an output register with another operation already assigned to main_aa_local_mem_dual_port_0
                                                  main_aa_local_mem_dual_port_0 
  store volatile i32 %46, i32*... (idx: 0)        7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_aa_local_mem_dual_port_0 
  store volatile i32 %46, i32*... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile i32 %46, i32*... (idx: 0) -> main_aa_local_mem_dual_port_0 (mux inputs: 3)
State: pipeline_time_3
Binding functional unit type: bb_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile i32 %38, i32*... can share an input with another operation already assigned to main_bb_local_mem_dual_port_0
  store volatile i32 %38, i32*... can share an output register with another operation already assigned to main_bb_local_mem_dual_port_0
                                                  main_bb_local_mem_dual_port_0 
  store volatile i32 %38, i32*... (idx: 0)        7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_bb_local_mem_dual_port_0 
  store volatile i32 %38, i32*... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile i32 %38, i32*... (idx: 0) -> main_bb_local_mem_dual_port_0 (mux inputs: 3)
State: pipeline_time_3
Binding functional unit type: cc_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile i32 %49, i32*... can share an input with another operation already assigned to main_cc_local_mem_dual_port_0
  store volatile i32 %49, i32*... can share an output register with another operation already assigned to main_cc_local_mem_dual_port_0
                                                  main_cc_local_mem_dual_port_0 
  store volatile i32 %49, i32*... (idx: 0)        7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_cc_local_mem_dual_port_0 
  store volatile i32 %49, i32*... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile i32 %49, i32*... (idx: 0) -> main_cc_local_mem_dual_port_0 (mux inputs: 3)
State: pipeline_time_3
Binding functional unit type: dd_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %71 = load volatile i32* %sc... can share an input with another operation already assigned to main_dd_local_mem_dual_port_0
  %71 = load volatile i32* %sc... can share an output register with another operation already assigned to main_dd_local_mem_dual_port_0
  %71 = load volatile i32* %sc... can share an output register with another operation already assigned to main_dd_local_mem_dual_port_1
  %72 = load volatile i32* %sc... can share an input with another operation already assigned to main_dd_local_mem_dual_port_0
  %72 = load volatile i32* %sc... can share an output register with another operation already assigned to main_dd_local_mem_dual_port_0
  %72 = load volatile i32* %sc... can share an output register with another operation already assigned to main_dd_local_mem_dual_port_1
                                                  main_dd_local_mem_dual_port_0 main_dd_local_mem_dual_port_1 
  %71 = load volatile i32* %sc... (idx: 0)        -2                            9                             
  %72 = load volatile i32* %sc... (idx: 1)        -2                            9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dd_local_mem_dual_port_0 main_dd_local_mem_dual_port_1 
  %71 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %72 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %71 = load volatile i32* %sc... (idx: 0) -> main_dd_local_mem_dual_port_0 (mux inputs: 3)
  %72 = load volatile i32* %sc... (idx: 1) -> main_dd_local_mem_dual_port_1 (mux inputs: 5)
State: LEGUP_F_main_BB__129
Binding functional unit type: dd_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %130 = load volatile i32* ge... can share an output register with another operation already assigned to main_dd_local_mem_dual_port_0
  %130 = load volatile i32* ge... can share an output register with another operation already assigned to main_dd_local_mem_dual_port_1
                                                  main_dd_local_mem_dual_port_0 main_dd_local_mem_dual_port_1 
  %130 = load volatile i32* ge... (idx: 0)        -2                            0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dd_local_mem_dual_port_0 main_dd_local_mem_dual_port_1 
  %130 = load volatile i32* ge... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %130 = load volatile i32* ge... (idx: 0) -> main_dd_local_mem_dual_port_0 (mux inputs: 3)

