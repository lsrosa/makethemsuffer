//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Sun Feb  3 21:13:51 2019
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Fri Sep 20 22:03:14 2019
//----------------------------------------------------------------------------//

--------------------------------------------------------------------------------
Function: main
--------------------------------------------------------------------------------
Function unit type:           Number Required               
mem_dual_port                 2                             
--------------------------------------------------------------------------------
Function: sha_transform
--------------------------------------------------------------------------------
Function unit type:           Number Required               
mem_dual_port                 2                             

Running Bipartite Weighted Matching on function: sha_transform
State: LEGUP_F_sha_transform_BB_entry
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  %0 = load i32* getelementptr... (idx: 0)        0                             0                             
  %1 = load i32* getelementptr... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  %0 = load i32* getelementptr... (idx: 0)        1                             0                             
  %1 = load i32* getelementptr... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %0 = load i32* getelementptr... (idx: 0) -> sha_transform_mem_dual_port_0 (mux inputs: 0)
  %1 = load i32* getelementptr... (idx: 1) -> sha_transform_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_sha_transform_BB_entry
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  %2 = load i32* getelementptr... (idx: 0)        0                             0                             
  %3 = load i32* getelementptr... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  %2 = load i32* getelementptr... (idx: 0)        1                             0                             
  %3 = load i32* getelementptr... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %2 = load i32* getelementptr... (idx: 0) -> sha_transform_mem_dual_port_0 (mux inputs: 0)
  %3 = load i32* getelementptr... (idx: 1) -> sha_transform_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_sha_transform_BB_entry
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  %4 = load i32* getelementptr... (idx: 0)        0                             0                             
  %5 = load i32* getelementptr... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  %4 = load i32* getelementptr... (idx: 0)        1                             0                             
  %5 = load i32* getelementptr... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %4 = load i32* getelementptr... (idx: 0) -> sha_transform_mem_dual_port_0 (mux inputs: 0)
  %5 = load i32* getelementptr... (idx: 1) -> sha_transform_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_sha_transform_BB_entry
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  %6 = load i32* getelementptr... (idx: 0)        0                             0                             
  %7 = load i32* getelementptr... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  %6 = load i32* getelementptr... (idx: 0)        1                             0                             
  %7 = load i32* getelementptr... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %6 = load i32* getelementptr... (idx: 0) -> sha_transform_mem_dual_port_0 (mux inputs: 0)
  %7 = load i32* getelementptr... (idx: 1) -> sha_transform_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_sha_transform_BB_entry
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  %8 = load i32* getelementptr... (idx: 0)        0                             0                             
  %9 = load i32* getelementptr... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  %8 = load i32* getelementptr... (idx: 0)        1                             0                             
  %9 = load i32* getelementptr... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %8 = load i32* getelementptr... (idx: 0) -> sha_transform_mem_dual_port_0 (mux inputs: 0)
  %9 = load i32* getelementptr... (idx: 1) -> sha_transform_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_sha_transform_BB_entry
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  %10 = load i32* getelementpt... (idx: 0)        0                             0                             
  %11 = load i32* getelementpt... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  %10 = load i32* getelementpt... (idx: 0)        1                             0                             
  %11 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %10 = load i32* getelementpt... (idx: 0) -> sha_transform_mem_dual_port_0 (mux inputs: 0)
  %11 = load i32* getelementpt... (idx: 1) -> sha_transform_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_sha_transform_BB_entry
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  %12 = load i32* getelementpt... (idx: 0)        0                             0                             
  %13 = load i32* getelementpt... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  %12 = load i32* getelementpt... (idx: 0)        1                             0                             
  %13 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %12 = load i32* getelementpt... (idx: 0) -> sha_transform_mem_dual_port_0 (mux inputs: 0)
  %13 = load i32* getelementpt... (idx: 1) -> sha_transform_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_sha_transform_BB_entry
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  %14 = load i32* getelementpt... (idx: 0)        0                             0                             
  %15 = load i32* getelementpt... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  %14 = load i32* getelementpt... (idx: 0)        1                             0                             
  %15 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %14 = load i32* getelementpt... (idx: 0) -> sha_transform_mem_dual_port_0 (mux inputs: 0)
  %15 = load i32* getelementpt... (idx: 1) -> sha_transform_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_sha_transform_BB_entry
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  store i32 %0, i32* %arrayidx... (idx: 0)        20                            20                            
  store i32 %1, i32* %arrayidx... (idx: 1)        20                            20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  store i32 %0, i32* %arrayidx... (idx: 0)        1                             0                             
  store i32 %1, i32* %arrayidx... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %0, i32* %arrayidx... (idx: 0) -> sha_transform_mem_dual_port_0 (mux inputs: 2)
  store i32 %1, i32* %arrayidx... (idx: 1) -> sha_transform_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_sha_transform_BB_entry
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %2, i32* %arrayidx... can share an output register with another operation already assigned to sha_transform_mem_dual_port_0
  store i32 %2, i32* %arrayidx... can share an output register with another operation already assigned to sha_transform_mem_dual_port_1
  store i32 %3, i32* %arrayidx... can share an output register with another operation already assigned to sha_transform_mem_dual_port_0
  store i32 %3, i32* %arrayidx... can share an output register with another operation already assigned to sha_transform_mem_dual_port_1
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  store i32 %2, i32* %arrayidx... (idx: 0)        17                            17                            
  store i32 %3, i32* %arrayidx... (idx: 1)        17                            17                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  store i32 %2, i32* %arrayidx... (idx: 0)        1                             0                             
  store i32 %3, i32* %arrayidx... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %2, i32* %arrayidx... (idx: 0) -> sha_transform_mem_dual_port_0 (mux inputs: 4)
  store i32 %3, i32* %arrayidx... (idx: 1) -> sha_transform_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_sha_transform_BB_entry
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %4, i32* %arrayidx... can share an output register with another operation already assigned to sha_transform_mem_dual_port_0
  store i32 %4, i32* %arrayidx... can share an output register with another operation already assigned to sha_transform_mem_dual_port_1
  store i32 %5, i32* %arrayidx... can share an output register with another operation already assigned to sha_transform_mem_dual_port_0
  store i32 %5, i32* %arrayidx... can share an output register with another operation already assigned to sha_transform_mem_dual_port_1
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  store i32 %4, i32* %arrayidx... (idx: 0)        19                            19                            
  store i32 %5, i32* %arrayidx... (idx: 1)        19                            19                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  store i32 %4, i32* %arrayidx... (idx: 0)        1                             0                             
  store i32 %5, i32* %arrayidx... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %4, i32* %arrayidx... (idx: 0) -> sha_transform_mem_dual_port_0 (mux inputs: 6)
  store i32 %5, i32* %arrayidx... (idx: 1) -> sha_transform_mem_dual_port_1 (mux inputs: 6)
State: LEGUP_F_sha_transform_BB_entry
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %6, i32* %arrayidx... can share an output register with another operation already assigned to sha_transform_mem_dual_port_0
  store i32 %6, i32* %arrayidx... can share an output register with another operation already assigned to sha_transform_mem_dual_port_1
  store i32 %7, i32* %arrayidx... can share an output register with another operation already assigned to sha_transform_mem_dual_port_0
  store i32 %7, i32* %arrayidx... can share an output register with another operation already assigned to sha_transform_mem_dual_port_1
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  store i32 %6, i32* %arrayidx... (idx: 0)        21                            21                            
  store i32 %7, i32* %arrayidx... (idx: 1)        21                            21                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  store i32 %6, i32* %arrayidx... (idx: 0)        1                             0                             
  store i32 %7, i32* %arrayidx... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %6, i32* %arrayidx... (idx: 0) -> sha_transform_mem_dual_port_0 (mux inputs: 8)
  store i32 %7, i32* %arrayidx... (idx: 1) -> sha_transform_mem_dual_port_1 (mux inputs: 8)
State: LEGUP_F_sha_transform_BB_entry
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %8, i32* %arrayidx... can share an output register with another operation already assigned to sha_transform_mem_dual_port_0
  store i32 %8, i32* %arrayidx... can share an output register with another operation already assigned to sha_transform_mem_dual_port_1
  store i32 %9, i32* %arrayidx... can share an output register with another operation already assigned to sha_transform_mem_dual_port_0
  store i32 %9, i32* %arrayidx... can share an output register with another operation already assigned to sha_transform_mem_dual_port_1
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  store i32 %8, i32* %arrayidx... (idx: 0)        23                            23                            
  store i32 %9, i32* %arrayidx... (idx: 1)        23                            23                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  store i32 %8, i32* %arrayidx... (idx: 0)        1                             0                             
  store i32 %9, i32* %arrayidx... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %8, i32* %arrayidx... (idx: 0) -> sha_transform_mem_dual_port_0 (mux inputs: 10)
  store i32 %9, i32* %arrayidx... (idx: 1) -> sha_transform_mem_dual_port_1 (mux inputs: 10)
State: LEGUP_F_sha_transform_BB_entry
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %10, i32* %arrayid... can share an output register with another operation already assigned to sha_transform_mem_dual_port_0
  store i32 %10, i32* %arrayid... can share an output register with another operation already assigned to sha_transform_mem_dual_port_1
  store i32 %11, i32* %arrayid... can share an output register with another operation already assigned to sha_transform_mem_dual_port_0
  store i32 %11, i32* %arrayid... can share an output register with another operation already assigned to sha_transform_mem_dual_port_1
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  store i32 %10, i32* %arrayid... (idx: 0)        25                            25                            
  store i32 %11, i32* %arrayid... (idx: 1)        25                            25                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  store i32 %10, i32* %arrayid... (idx: 0)        1                             0                             
  store i32 %11, i32* %arrayid... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %10, i32* %arrayid... (idx: 0) -> sha_transform_mem_dual_port_0 (mux inputs: 12)
  store i32 %11, i32* %arrayid... (idx: 1) -> sha_transform_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_sha_transform_BB_entry
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %12, i32* %arrayid... can share an output register with another operation already assigned to sha_transform_mem_dual_port_0
  store i32 %12, i32* %arrayid... can share an output register with another operation already assigned to sha_transform_mem_dual_port_1
  store i32 %13, i32* %arrayid... can share an output register with another operation already assigned to sha_transform_mem_dual_port_0
  store i32 %13, i32* %arrayid... can share an output register with another operation already assigned to sha_transform_mem_dual_port_1
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  store i32 %12, i32* %arrayid... (idx: 0)        27                            27                            
  store i32 %13, i32* %arrayid... (idx: 1)        27                            27                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  store i32 %12, i32* %arrayid... (idx: 0)        1                             0                             
  store i32 %13, i32* %arrayid... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %12, i32* %arrayid... (idx: 0) -> sha_transform_mem_dual_port_0 (mux inputs: 14)
  store i32 %13, i32* %arrayid... (idx: 1) -> sha_transform_mem_dual_port_1 (mux inputs: 14)
State: LEGUP_F_sha_transform_BB_entry
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %14, i32* %arrayid... can share an output register with another operation already assigned to sha_transform_mem_dual_port_0
  store i32 %14, i32* %arrayid... can share an output register with another operation already assigned to sha_transform_mem_dual_port_1
  store i32 %15, i32* %arrayid... can share an output register with another operation already assigned to sha_transform_mem_dual_port_0
  store i32 %15, i32* %arrayid... can share an output register with another operation already assigned to sha_transform_mem_dual_port_1
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  store i32 %14, i32* %arrayid... (idx: 0)        29                            29                            
  store i32 %15, i32* %arrayid... (idx: 1)        29                            29                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  store i32 %14, i32* %arrayid... (idx: 0)        1                             0                             
  store i32 %15, i32* %arrayid... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %14, i32* %arrayid... (idx: 0) -> sha_transform_mem_dual_port_0 (mux inputs: 16)
  store i32 %15, i32* %arrayid... (idx: 1) -> sha_transform_mem_dual_port_1 (mux inputs: 16)
State: LEGUP_F_sha_transform_BB_forbody4
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %19 = load i32* %arrayidx5, ... can share an output register with another operation already assigned to sha_transform_mem_dual_port_0
  %19 = load i32* %arrayidx5, ... can share an output register with another operation already assigned to sha_transform_mem_dual_port_1
  %20 = load i32* %arrayidx7, ... can share an output register with another operation already assigned to sha_transform_mem_dual_port_0
  %20 = load i32* %arrayidx7, ... can share an output register with another operation already assigned to sha_transform_mem_dual_port_1
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  %19 = load i32* %arrayidx5, ... (idx: 0)        21                            21                            
  %20 = load i32* %arrayidx7, ... (idx: 1)        21                            21                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  %19 = load i32* %arrayidx5, ... (idx: 0)        1                             0                             
  %20 = load i32* %arrayidx7, ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %19 = load i32* %arrayidx5, ... (idx: 0) -> sha_transform_mem_dual_port_0 (mux inputs: 17)
  %20 = load i32* %arrayidx7, ... (idx: 1) -> sha_transform_mem_dual_port_1 (mux inputs: 17)
State: LEGUP_F_sha_transform_BB_forbody4
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %21 = load i32* %arrayidx9, ... can share an output register with another operation already assigned to sha_transform_mem_dual_port_0
  %21 = load i32* %arrayidx9, ... can share an output register with another operation already assigned to sha_transform_mem_dual_port_1
  %22 = load i32* %arrayidx12,... can share an output register with another operation already assigned to sha_transform_mem_dual_port_0
  %22 = load i32* %arrayidx12,... can share an output register with another operation already assigned to sha_transform_mem_dual_port_1
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  %21 = load i32* %arrayidx9, ... (idx: 0)        22                            22                            
  %22 = load i32* %arrayidx12,... (idx: 1)        22                            22                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  %21 = load i32* %arrayidx9, ... (idx: 0)        1                             0                             
  %22 = load i32* %arrayidx12,... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %21 = load i32* %arrayidx9, ... (idx: 0) -> sha_transform_mem_dual_port_0 (mux inputs: 18)
  %22 = load i32* %arrayidx12,... (idx: 1) -> sha_transform_mem_dual_port_1 (mux inputs: 18)
State: LEGUP_F_sha_transform_BB_forbody4
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %xor13, i32* %arra... can share an output register with another operation already assigned to sha_transform_mem_dual_port_0
  store i32 %xor13, i32* %arra... can share an output register with another operation already assigned to sha_transform_mem_dual_port_1
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  store i32 %xor13, i32* %arra... (idx: 0)        33                            33                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  store i32 %xor13, i32* %arra... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %xor13, i32* %arra... (idx: 0) -> sha_transform_mem_dual_port_0 (mux inputs: 20)
State: LEGUP_F_sha_transform_BB_forend17
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %23 = load i32* @sha_info_di... can share an output register with another operation already assigned to sha_transform_mem_dual_port_0
  %23 = load i32* @sha_info_di... can share an output register with another operation already assigned to sha_transform_mem_dual_port_1
  %24 = load i32* @sha_info_di... can share an output register with another operation already assigned to sha_transform_mem_dual_port_0
  %24 = load i32* @sha_info_di... can share an output register with another operation already assigned to sha_transform_mem_dual_port_1
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  %23 = load i32* @sha_info_di... (idx: 0)        15                            13                            
  %24 = load i32* @sha_info_di... (idx: 1)        15                            13                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  %23 = load i32* @sha_info_di... (idx: 0)        1                             0                             
  %24 = load i32* @sha_info_di... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %23 = load i32* @sha_info_di... (idx: 0) -> sha_transform_mem_dual_port_0 (mux inputs: 20)
  %24 = load i32* @sha_info_di... (idx: 1) -> sha_transform_mem_dual_port_1 (mux inputs: 18)
State: LEGUP_F_sha_transform_BB_forend17
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %25 = load i32* @sha_info_di... can share an output register with another operation already assigned to sha_transform_mem_dual_port_0
  %25 = load i32* @sha_info_di... can share an output register with another operation already assigned to sha_transform_mem_dual_port_1
  %26 = load i32* @sha_info_di... can share an output register with another operation already assigned to sha_transform_mem_dual_port_0
  %26 = load i32* @sha_info_di... can share an output register with another operation already assigned to sha_transform_mem_dual_port_1
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  %25 = load i32* @sha_info_di... (idx: 0)        15                            13                            
  %26 = load i32* @sha_info_di... (idx: 1)        15                            13                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  %25 = load i32* @sha_info_di... (idx: 0)        1                             0                             
  %26 = load i32* @sha_info_di... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %25 = load i32* @sha_info_di... (idx: 0) -> sha_transform_mem_dual_port_0 (mux inputs: 20)
  %26 = load i32* @sha_info_di... (idx: 1) -> sha_transform_mem_dual_port_1 (mux inputs: 18)
State: LEGUP_F_sha_transform_BB_forend17
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %27 = load i32* @sha_info_di... can share an output register with another operation already assigned to sha_transform_mem_dual_port_0
  %27 = load i32* @sha_info_di... can share an output register with another operation already assigned to sha_transform_mem_dual_port_1
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  %27 = load i32* @sha_info_di... (idx: 0)        15                            13                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  %27 = load i32* @sha_info_di... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %27 = load i32* @sha_info_di... (idx: 0) -> sha_transform_mem_dual_port_1 (mux inputs: 18)
State: pipeline_time_0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %29 = load i32* %arrayidx24,... can share an output register with another operation already assigned to sha_transform_mem_dual_port_0
  %29 = load i32* %arrayidx24,... can share an output register with another operation already assigned to sha_transform_mem_dual_port_1
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  %29 = load i32* %arrayidx24,... (idx: 0)        25                            23                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  %29 = load i32* %arrayidx24,... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %29 = load i32* %arrayidx24,... (idx: 0) -> sha_transform_mem_dual_port_1 (mux inputs: 19)
State: pipeline_time_0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %30 = load i32* %arrayidx43,... can share an output register with another operation already assigned to sha_transform_mem_dual_port_0
  %30 = load i32* %arrayidx43,... can share an output register with another operation already assigned to sha_transform_mem_dual_port_1
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  %30 = load i32* %arrayidx43,... (idx: 0)        25                            24                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  %30 = load i32* %arrayidx43,... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %30 = load i32* %arrayidx43,... (idx: 0) -> sha_transform_mem_dual_port_1 (mux inputs: 20)
State: pipeline_time_0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %31 = load i32* %arrayidx65,... can share an output register with another operation already assigned to sha_transform_mem_dual_port_0
  %31 = load i32* %arrayidx65,... can share an output register with another operation already assigned to sha_transform_mem_dual_port_1
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  %31 = load i32* %arrayidx65,... (idx: 0)        25                            25                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  %31 = load i32* %arrayidx65,... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %31 = load i32* %arrayidx65,... (idx: 0) -> sha_transform_mem_dual_port_0 (mux inputs: 21)
State: pipeline_time_0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %32 = load i32* %arrayidx84,... can share an output register with another operation already assigned to sha_transform_mem_dual_port_0
  %32 = load i32* %arrayidx84,... can share an output register with another operation already assigned to sha_transform_mem_dual_port_1
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  %32 = load i32* %arrayidx84,... (idx: 0)        26                            25                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  %32 = load i32* %arrayidx84,... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %32 = load i32* %arrayidx84,... (idx: 0) -> sha_transform_mem_dual_port_1 (mux inputs: 21)
State: LEGUP_F_sha_transform_BB_forend92
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %33 = load i32* @sha_info_di... can share an output register with another operation already assigned to sha_transform_mem_dual_port_0
  %33 = load i32* @sha_info_di... can share an output register with another operation already assigned to sha_transform_mem_dual_port_1
  %34 = load i32* @sha_info_di... can share an output register with another operation already assigned to sha_transform_mem_dual_port_0
  %34 = load i32* @sha_info_di... can share an output register with another operation already assigned to sha_transform_mem_dual_port_1
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  %33 = load i32* @sha_info_di... (idx: 0)        16                            16                            
  %34 = load i32* @sha_info_di... (idx: 1)        16                            16                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  %33 = load i32* @sha_info_di... (idx: 0)        1                             0                             
  %34 = load i32* @sha_info_di... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %33 = load i32* @sha_info_di... (idx: 0) -> sha_transform_mem_dual_port_0 (mux inputs: 21)
  %34 = load i32* @sha_info_di... (idx: 1) -> sha_transform_mem_dual_port_1 (mux inputs: 21)
State: LEGUP_F_sha_transform_BB_forend92
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %35 = load i32* @sha_info_di... can share an output register with another operation already assigned to sha_transform_mem_dual_port_0
  %35 = load i32* @sha_info_di... can share an output register with another operation already assigned to sha_transform_mem_dual_port_1
  %36 = load i32* @sha_info_di... can share an output register with another operation already assigned to sha_transform_mem_dual_port_0
  %36 = load i32* @sha_info_di... can share an output register with another operation already assigned to sha_transform_mem_dual_port_1
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  %35 = load i32* @sha_info_di... (idx: 0)        16                            16                            
  %36 = load i32* @sha_info_di... (idx: 1)        16                            16                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  %35 = load i32* @sha_info_di... (idx: 0)        1                             0                             
  %36 = load i32* @sha_info_di... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %35 = load i32* @sha_info_di... (idx: 0) -> sha_transform_mem_dual_port_0 (mux inputs: 21)
  %36 = load i32* @sha_info_di... (idx: 1) -> sha_transform_mem_dual_port_1 (mux inputs: 21)
State: LEGUP_F_sha_transform_BB_forend92
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %add93, i32* @sha_... can share an output register with another operation already assigned to sha_transform_mem_dual_port_0
  store i32 %add93, i32* @sha_... can share an output register with another operation already assigned to sha_transform_mem_dual_port_1
  %37 = load i32* @sha_info_di... can share an output register with another operation already assigned to sha_transform_mem_dual_port_0
  %37 = load i32* @sha_info_di... can share an output register with another operation already assigned to sha_transform_mem_dual_port_1
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  store i32 %add93, i32* @sha_... (idx: 0)        26                            26                            
  %37 = load i32* @sha_info_di... (idx: 1)        16                            16                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  store i32 %add93, i32* @sha_... (idx: 0)        1                             0                             
  %37 = load i32* @sha_info_di... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %add93, i32* @sha_... (idx: 0) -> sha_transform_mem_dual_port_0 (mux inputs: 22)
  %37 = load i32* @sha_info_di... (idx: 1) -> sha_transform_mem_dual_port_1 (mux inputs: 21)
State: LEGUP_F_sha_transform_BB_forend92
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %add94, i32* @sha_... can share an output register with another operation already assigned to sha_transform_mem_dual_port_0
  store i32 %add94, i32* @sha_... can share an output register with another operation already assigned to sha_transform_mem_dual_port_1
  store i32 %add95, i32* @sha_... can share an output register with another operation already assigned to sha_transform_mem_dual_port_0
  store i32 %add95, i32* @sha_... can share an output register with another operation already assigned to sha_transform_mem_dual_port_1
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  store i32 %add94, i32* @sha_... (idx: 0)        27                            26                            
  store i32 %add95, i32* @sha_... (idx: 1)        27                            26                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  store i32 %add94, i32* @sha_... (idx: 0)        1                             0                             
  store i32 %add95, i32* @sha_... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %add94, i32* @sha_... (idx: 0) -> sha_transform_mem_dual_port_0 (mux inputs: 23)
  store i32 %add95, i32* @sha_... (idx: 1) -> sha_transform_mem_dual_port_1 (mux inputs: 22)
State: LEGUP_F_sha_transform_BB_forend92
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %add96, i32* @sha_... can share an output register with another operation already assigned to sha_transform_mem_dual_port_0
  store i32 %add96, i32* @sha_... can share an output register with another operation already assigned to sha_transform_mem_dual_port_1
  store i32 %add97, i32* @sha_... can share an output register with another operation already assigned to sha_transform_mem_dual_port_0
  store i32 %add97, i32* @sha_... can share an output register with another operation already assigned to sha_transform_mem_dual_port_1
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  store i32 %add96, i32* @sha_... (idx: 0)        28                            27                            
  store i32 %add97, i32* @sha_... (idx: 1)        28                            27                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  sha_transform_mem_dual_port_0 sha_transform_mem_dual_port_1 
  store i32 %add96, i32* @sha_... (idx: 0)        1                             0                             
  store i32 %add97, i32* @sha_... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %add96, i32* @sha_... (idx: 0) -> sha_transform_mem_dual_port_0 (mux inputs: 24)
  store i32 %add97, i32* @sha_... (idx: 1) -> sha_transform_mem_dual_port_1 (mux inputs: 23)

Running Bipartite Weighted Matching on function: main
State: LEGUP_F_main_BB_ifendi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 1732584193, i32* @... (idx: 0)        0                             0                             
  store i32 -271733879, i32* @... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 1732584193, i32* @... (idx: 0)        1                             0                             
  store i32 -271733879, i32* @... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 1732584193, i32* @... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 -271733879, i32* @... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_ifendi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 -1732584194, i32* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 -1732584194, i32* ... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 271733878, i32* @s... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 271733878, i32* @s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 -1732584194, i32* ... (idx: 0)        -5                            -5                            
  store i32 271733878, i32* @s... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 -1732584194, i32* ... (idx: 0)        1                             0                             
  store i32 271733878, i32* @s... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 -1732584194, i32* ... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 271733878, i32* @s... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_ifendi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 -1009589776, i32* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 -1009589776, i32* ... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 -1009589776, i32* ... (idx: 0)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 -1009589776, i32* ... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 -1009589776, i32* ... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
State: LEGUP_F_main_BB_whilebodyii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %9 = load i8* %p2.026.i.i, a... can share an output register with another operation already assigned to main_mem_dual_port_0
  %9 = load i8* %p2.026.i.i, a... can share an output register with another operation already assigned to main_mem_dual_port_1
  %10 = load i8* %incdec.ptr.i... can share an output register with another operation already assigned to main_mem_dual_port_0
  %10 = load i8* %incdec.ptr.i... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %9 = load i8* %p2.026.i.i, a... (idx: 0)        5                             5                             
  %10 = load i8* %incdec.ptr.i... (idx: 1)        5                             5                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %9 = load i8* %p2.026.i.i, a... (idx: 0)        1                             0                             
  %10 = load i8* %incdec.ptr.i... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %9 = load i8* %p2.026.i.i, a... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %10 = load i8* %incdec.ptr.i... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_main_BB_whilebodyii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %11 = load i8* %incdec.ptr2.... can share an output register with another operation already assigned to main_mem_dual_port_0
  %11 = load i8* %incdec.ptr2.... can share an output register with another operation already assigned to main_mem_dual_port_1
  %12 = load i8* %incdec.ptr6.... can share an output register with another operation already assigned to main_mem_dual_port_0
  %12 = load i8* %incdec.ptr6.... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %11 = load i8* %incdec.ptr2.... (idx: 0)        6                             6                             
  %12 = load i8* %incdec.ptr6.... (idx: 1)        6                             6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %11 = load i8* %incdec.ptr2.... (idx: 0)        1                             0                             
  %12 = load i8* %incdec.ptr6.... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %11 = load i8* %incdec.ptr2.... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 2)
  %12 = load i8* %incdec.ptr6.... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_main_BB_whilebodyii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %or15.i.i, i32* %p... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %or15.i.i, i32* %p... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %or15.i.i, i32* %p... (idx: 0)        17                            17                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %or15.i.i, i32* %p... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %or15.i.i, i32* %p... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_main_BB_whilebodyii30
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %22 = load i8* %p2.026.i.i12... can share an output register with another operation already assigned to main_mem_dual_port_0
  %22 = load i8* %p2.026.i.i12... can share an output register with another operation already assigned to main_mem_dual_port_1
  %23 = load i8* %incdec.ptr.i... can share an output register with another operation already assigned to main_mem_dual_port_0
  %23 = load i8* %incdec.ptr.i... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %22 = load i8* %p2.026.i.i12... (idx: 0)        9                             7                             
  %23 = load i8* %incdec.ptr.i... (idx: 1)        9                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %22 = load i8* %p2.026.i.i12... (idx: 0)        1                             0                             
  %23 = load i8* %incdec.ptr.i... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %22 = load i8* %p2.026.i.i12... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 5)
  %23 = load i8* %incdec.ptr.i... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 3)
State: LEGUP_F_main_BB_whilebodyii30
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %24 = load i8* %incdec.ptr2.... can share an output register with another operation already assigned to main_mem_dual_port_0
  %24 = load i8* %incdec.ptr2.... can share an output register with another operation already assigned to main_mem_dual_port_1
  %25 = load i8* %incdec.ptr6.... can share an output register with another operation already assigned to main_mem_dual_port_0
  %25 = load i8* %incdec.ptr6.... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %24 = load i8* %incdec.ptr2.... (idx: 0)        10                            8                             
  %25 = load i8* %incdec.ptr6.... (idx: 1)        10                            8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %24 = load i8* %incdec.ptr2.... (idx: 0)        1                             0                             
  %25 = load i8* %incdec.ptr6.... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %24 = load i8* %incdec.ptr2.... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 6)
  %25 = load i8* %incdec.ptr6.... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_main_BB_whilebodyii30
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %or15.i.i27, i32* ... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %or15.i.i27, i32* ... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %or15.i.i27, i32* ... (idx: 0)        21                            19                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %or15.i.i27, i32* ... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %or15.i.i27, i32* ... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 6)
State: LEGUP_F_main_BB_whilebody4i22preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 128, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 128, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 128, i32* geteleme... (idx: 0)        1                             1                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 128, i32* geteleme... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 128, i32* geteleme... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 6)
State: LEGUP_F_main_BB_whilebody4i22i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* %p.19.i18.... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* %p.19.i18.... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* %p.19.i18.... (idx: 0)        11                            11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* %p.19.i18.... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* %p.19.i18.... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 7)
State: LEGUP_F_main_BB_sha_finalexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 131072, i32* getel... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 131072, i32* getel... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        2                             1                             
  store i32 131072, i32* getel... (idx: 1)        2                             1                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 131072, i32* getel... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 7)
  store i32 131072, i32* getel... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 6)
State: LEGUP_F_main_BB_sha_finalexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %27 = load i32* @sha_info_di... can share an output register with another operation already assigned to main_mem_dual_port_0
  %27 = load i32* @sha_info_di... can share an output register with another operation already assigned to main_mem_dual_port_1
  %28 = load i32* @sha_info_di... can share an output register with another operation already assigned to main_mem_dual_port_0
  %28 = load i32* @sha_info_di... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %27 = load i32* @sha_info_di... (idx: 0)        2                             1                             
  %28 = load i32* @sha_info_di... (idx: 1)        2                             1                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %27 = load i32* @sha_info_di... (idx: 0)        1                             0                             
  %28 = load i32* @sha_info_di... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %27 = load i32* @sha_info_di... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 7)
  %28 = load i32* @sha_info_di... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 6)
State: LEGUP_F_main_BB_sha_finalexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %29 = load i32* @sha_info_di... can share an output register with another operation already assigned to main_mem_dual_port_0
  %29 = load i32* @sha_info_di... can share an output register with another operation already assigned to main_mem_dual_port_1
  %30 = load i32* @sha_info_di... can share an output register with another operation already assigned to main_mem_dual_port_0
  %30 = load i32* @sha_info_di... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %29 = load i32* @sha_info_di... (idx: 0)        2                             1                             
  %30 = load i32* @sha_info_di... (idx: 1)        2                             1                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %29 = load i32* @sha_info_di... (idx: 0)        1                             0                             
  %30 = load i32* @sha_info_di... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %29 = load i32* @sha_info_di... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 7)
  %30 = load i32* @sha_info_di... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 6)
State: LEGUP_F_main_BB_sha_finalexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %31 = load i32* @sha_info_di... can share an output register with another operation already assigned to main_mem_dual_port_0
  %31 = load i32* @sha_info_di... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %31 = load i32* @sha_info_di... (idx: 0)        2                             1                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %31 = load i32* @sha_info_di... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %31 = load i32* @sha_info_di... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 6)

