//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Tue Feb 14 19:47:56 2017
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Wed May 17 19:18:37 2017
//----------------------------------------------------------------------------//

allocateRAM: %u1
Constant: 0
allocateRAM: %u2
Constant: 0
allocateRAM: %u3
Constant: 0
# of Vertices: 53
Representatives: 
1 -> 1
2 -> 2
3 -> 3
4 -> 4
5 -> 5
6 -> 6
7 -> 7
8 -> 8
9 -> 9
10 -> 10
11 -> 11
12 -> 12
13 -> 13
14 -> 14
15 -> 15
16 -> 16
17 -> 17
18 -> 18
19 -> 19
20 -> 20
21 -> 21
22 -> 22
23 -> 23
24 -> 24
25 -> 25
26 -> 26
27 -> 27
28 -> 28
29 -> 29
30 -> 30
31 -> 31
32 -> 32
33 -> 33
34 -> 34
35 -> 35
36 -> 36
37 -> 37
38 -> 38
39 -> 39
40 -> 40
41 -> 41
42 -> 42
43 -> 43
44 -> 44
45 -> 45
46 -> 46
47 -> 47
48 -> 48
49 -> 49
50 -> 50
51 -> 51
52 -> 52
53 -> 53

Connections (Graph): 
1 -> 
2 -> 
3 -> 18 23 39 42 43 
4 -> 12 17 26 28 33 36 
5 -> 19 21 40 44 45 
6 -> 14 16 27 29 34 37 
7 -> 20 22 41 46 47 53 
8 -> 13 15 30 31 35 38 52 
9 -> 
10 -> 9 11 49 
11 -> 
12 -> 
13 -> 
14 -> 
15 -> 
16 -> 
17 -> 
18 -> 
19 -> 
20 -> 
21 -> 
22 -> 
23 -> 
24 -> 
25 -> 24 32 48 
26 -> 
27 -> 
28 -> 
29 -> 
30 -> 
31 -> 
32 -> 
33 -> 
34 -> 
35 -> 
36 -> 
37 -> 
38 -> 
39 -> 
40 -> 
41 -> 
42 -> 
43 -> 
44 -> 
45 -> 
46 -> 
47 -> 
48 -> 
49 -> 
50 -> 
51 -> 50 
52 -> 
53 -> 

Points-to-set: 
1 -> {}
2 -> {1, }
3 -> {}
4 -> {3, }
5 -> {}
6 -> {5, }
7 -> {}
8 -> {7, }
9 -> {}
10 -> {}
11 -> {}
12 -> {3, }
13 -> {7, }
14 -> {5, }
15 -> {7, }
16 -> {5, }
17 -> {3, }
18 -> {}
19 -> {}
20 -> {}
21 -> {}
22 -> {}
23 -> {}
24 -> {}
25 -> {}
26 -> {3, }
27 -> {5, }
28 -> {3, }
29 -> {5, }
30 -> {7, }
31 -> {7, }
32 -> {}
33 -> {3, }
34 -> {5, }
35 -> {7, }
36 -> {3, }
37 -> {5, }
38 -> {7, }
39 -> {}
40 -> {}
41 -> {}
42 -> {}
43 -> {}
44 -> {}
45 -> {}
46 -> {}
47 -> {}
48 -> {}
49 -> {}
50 -> {}
51 -> {}
52 -> {7, }
53 -> {}

Variable: Int -> Value* mapping
2: @.str = private unnamed_addr constant [6 x i8] c"loop1\00", align 1
44:   %39 = load float* %scevgep8, align 4, !tbaa !2, !legup.pipeline.start_time !6, !legup.pipeline.avail_time !8, !legup.pipeline.stage !7
45:   %44 = load float* %scevgep7, align 4, !tbaa !2, !legup.pipeline.start_time !8, !legup.pipeline.avail_time !10, !legup.pipeline.stage !7
46:   %54 = load float* %scevgep5, align 4, !tbaa !2, !legup.pipeline.start_time !6, !legup.pipeline.avail_time !8, !legup.pipeline.stage !7
47:   %59 = load float* %scevgep4, align 4, !tbaa !2, !legup.pipeline.start_time !8, !legup.pipeline.avail_time !10, !legup.pipeline.stage !7
8:   %u3 = alloca [2 x [11 x [4 x float]]], align 4
51:   %indvar33 = phi i32 [ %indvar.next34, %66 ], [ 0, %0 ]
4:   %u1 = alloca [2 x [11 x [4 x float]]], align 4
6:   %u2 = alloca [2 x [11 x [4 x float]]], align 4
10:   %indvar2 = phi i32 [ %indvar.next3, %65 ], [ 0, %.preheader1 ]
9:   %1 = add i32 %indvar2, 2
11:   %kx.13 = add i32 %indvar2, 1
12:   %.phi.trans.insert1 = getelementptr [2 x [11 x [4 x float]]]* %u1, i32 0, i32 0, i32 1, i32 %kx.13
13:   %.phi.trans.insert14 = getelementptr [2 x [11 x [4 x float]]]* %u3, i32 0, i32 0, i32 1, i32 %kx.13
14:   %.phi.trans.insert12 = getelementptr [2 x [11 x [4 x float]]]* %u2, i32 0, i32 0, i32 1, i32 %kx.13
15:   %.phi.trans.insert10 = getelementptr [2 x [11 x [4 x float]]]* %u3, i32 0, i32 0, i32 0, i32 %kx.13
52:   %68 = getelementptr inbounds [2 x [11 x [4 x float]]]* %u3, i32 0, i32 1, i32 10, i32 3
53:   %69 = load float* %68, align 4, !tbaa !2
16:   %.phi.trans.insert8 = getelementptr [2 x [11 x [4 x float]]]* %u2, i32 0, i32 0, i32 0, i32 %kx.13
17:   %.phi.trans.insert = getelementptr [2 x [11 x [4 x float]]]* %u1, i32 0, i32 0, i32 0, i32 %kx.13
18:   %.pre = load float* %.phi.trans.insert, align 4, !tbaa !2
19:   %.pre9 = load float* %.phi.trans.insert8, align 4, !tbaa !2
20:   %.pre11 = load float* %.phi.trans.insert10, align 4, !tbaa !2
21:   %.pre13 = load float* %.phi.trans.insert12, align 4, !tbaa !2
22:   %.pre15 = load float* %.phi.trans.insert14, align 4, !tbaa !2
23:   %.pre2 = load float* %.phi.trans.insert1, align 4, !tbaa !2
25:   %indvar = phi i32 [ %indvar.next, %2 ], [ 0, %.preheader ], !legup.canonical_induction !6, !legup.pipeline.start_time !7, !legup.pipeline.avail_time !7, !legup.pipeline.stage !7
24:   %9 = add i32 %indvar, 1, !legup.pipeline.start_time !7, !legup.pipeline.avail_time !7, !legup.pipeline.stage !7
26:   %scevgep10 = getelementptr [2 x [11 x [4 x float]]]* %u1, i32 0, i32 0, i32 %9, i32 %indvar2, !legup.pipeline.start_time !6, !legup.pipeline.avail_time !6, !legup.pipeline.stage !7
27:   %scevgep7 = getelementptr [2 x [11 x [4 x float]]]* %u2, i32 0, i32 0, i32 %9, i32 %indvar2, !legup.pipeline.start_time !6, !legup.pipeline.avail_time !6, !legup.pipeline.stage !7
28:   %scevgep11 = getelementptr [2 x [11 x [4 x float]]]* %u1, i32 0, i32 0, i32 %9, i32 %1, !legup.pipeline.start_time !6, !legup.pipeline.avail_time !6, !legup.pipeline.stage !7
29:   %scevgep8 = getelementptr [2 x [11 x [4 x float]]]* %u2, i32 0, i32 0, i32 %9, i32 %1, !legup.pipeline.start_time !6, !legup.pipeline.avail_time !6, !legup.pipeline.stage !7
30:   %scevgep5 = getelementptr [2 x [11 x [4 x float]]]* %u3, i32 0, i32 0, i32 %9, i32 %1, !legup.pipeline.start_time !6, !legup.pipeline.avail_time !6, !legup.pipeline.stage !7
31:   %scevgep4 = getelementptr [2 x [11 x [4 x float]]]* %u3, i32 0, i32 0, i32 %9, i32 %indvar2, !legup.pipeline.start_time !6, !legup.pipeline.avail_time !6, !legup.pipeline.stage !7
32:   %10 = add i32 %indvar, 2, !legup.pipeline.start_time !7, !legup.pipeline.avail_time !7, !legup.pipeline.stage !7
33:   %scevgep14 = getelementptr [2 x [11 x [4 x float]]]* %u1, i32 0, i32 0, i32 %10, i32 %kx.13, !legup.pipeline.start_time !6, !legup.pipeline.avail_time !6, !legup.pipeline.stage !7
34:   %scevgep13 = getelementptr [2 x [11 x [4 x float]]]* %u2, i32 0, i32 0, i32 %10, i32 %kx.13, !legup.pipeline.start_time !6, !legup.pipeline.avail_time !6, !legup.pipeline.stage !7
35:   %scevgep12 = getelementptr [2 x [11 x [4 x float]]]* %u3, i32 0, i32 0, i32 %10, i32 %kx.13, !legup.pipeline.start_time !6, !legup.pipeline.avail_time !6, !legup.pipeline.stage !7
36:   %scevgep9 = getelementptr [2 x [11 x [4 x float]]]* %u1, i32 0, i32 1, i32 %9, i32 %kx.13, !legup.pipeline.start_time !6, !legup.pipeline.avail_time !6, !legup.pipeline.stage !7
37:   %scevgep6 = getelementptr [2 x [11 x [4 x float]]]* %u2, i32 0, i32 1, i32 %9, i32 %kx.13, !legup.pipeline.start_time !6, !legup.pipeline.avail_time !6, !legup.pipeline.stage !7
38:   %scevgep = getelementptr [2 x [11 x [4 x float]]]* %u3, i32 0, i32 1, i32 %9, i32 %kx.13, !legup.pipeline.start_time !6, !legup.pipeline.avail_time !6, !legup.pipeline.stage !7
39:   %11 = load float* %scevgep14, align 4, !tbaa !2, !legup.pipeline.start_time !6, !legup.pipeline.avail_time !8, !legup.pipeline.stage !7
40:   %13 = load float* %scevgep13, align 4, !tbaa !2, !legup.pipeline.start_time !6, !legup.pipeline.avail_time !8, !legup.pipeline.stage !7
41:   %15 = load float* %scevgep12, align 4, !tbaa !2, !legup.pipeline.start_time !6, !legup.pipeline.avail_time !8, !legup.pipeline.stage !7
42:   %24 = load float* %scevgep11, align 4, !tbaa !2, !legup.pipeline.start_time !6, !legup.pipeline.avail_time !8, !legup.pipeline.stage !7
43:   %29 = load float* %scevgep10, align 4, !tbaa !2, !legup.pipeline.start_time !8, !legup.pipeline.avail_time !10, !legup.pipeline.stage !7
48:   %indvar.next = add i32 %indvar, 1, !legup.pipeline.start_time !7, !legup.pipeline.avail_time !7, !legup.pipeline.stage !7
49:   %indvar.next3 = add i32 %indvar2, 1
50:   %indvar.next34 = add i32 %indvar33, 1
Memory: Int -> Value* mapping
1: @.str = private unnamed_addr constant [6 x i8] c"loop1\00", align 1
7:   %u3 = alloca [2 x [11 x [4 x float]]], align 4
3:   %u1 = alloca [2 x [11 x [4 x float]]], align 4
5:   %u2 = alloca [2 x [11 x [4 x float]]], align 4
digraph "adi_int.bc" {
    1 [label="#1",color=blue,style=solid];
    2 [label=".str",color=blue,style=solid];
    3 [label="#3",color=blue,style=solid];
    4 [label="u1",color=blue,style=solid];
    5 [label="#5",color=blue,style=solid];
    6 [label="u2",color=blue,style=solid];
    7 [label="#7",color=blue,style=solid];
    8 [label="u3",color=blue,style=solid];
    9 [label="unknown",color=blue,style=solid];
    10 [label="indvar2",color=blue,style=solid];
    11 [label="kx.13",color=blue,style=solid];
    12 [label=".phi.trans.insert1",color=blue,style=solid];
    13 [label=".phi.trans.insert14",color=blue,style=solid];
    14 [label=".phi.trans.insert12",color=blue,style=solid];
    15 [label=".phi.trans.insert10",color=blue,style=solid];
    16 [label=".phi.trans.insert8",color=blue,style=solid];
    17 [label=".phi.trans.insert",color=blue,style=solid];
    18 [label=".pre",color=blue,style=solid];
    19 [label=".pre9",color=blue,style=solid];
    20 [label=".pre11",color=blue,style=solid];
    21 [label=".pre13",color=blue,style=solid];
    22 [label=".pre15",color=blue,style=solid];
    23 [label=".pre2",color=blue,style=solid];
    24 [label="unknown",color=blue,style=solid];
    25 [label="indvar",color=blue,style=solid];
    26 [label="scevgep10",color=blue,style=solid];
    27 [label="scevgep7",color=blue,style=solid];
    28 [label="scevgep11",color=blue,style=solid];
    29 [label="scevgep8",color=blue,style=solid];
    30 [label="scevgep5",color=blue,style=solid];
    31 [label="scevgep4",color=blue,style=solid];
    32 [label="unknown",color=blue,style=solid];
    33 [label="scevgep14",color=blue,style=solid];
    34 [label="scevgep13",color=blue,style=solid];
    35 [label="scevgep12",color=blue,style=solid];
    36 [label="scevgep9",color=blue,style=solid];
    37 [label="scevgep6",color=blue,style=solid];
    38 [label="scevgep",color=blue,style=solid];
    39 [label="unknown",color=blue,style=solid];
    40 [label="unknown",color=blue,style=solid];
    41 [label="unknown",color=blue,style=solid];
    42 [label="unknown",color=blue,style=solid];
    43 [label="unknown",color=blue,style=solid];
    44 [label="unknown",color=blue,style=solid];
    45 [label="unknown",color=blue,style=solid];
    46 [label="unknown",color=blue,style=solid];
    47 [label="unknown",color=blue,style=solid];
    48 [label="indvar.next",color=blue,style=solid];
    49 [label="indvar.next3",color=blue,style=solid];
    50 [label="indvar.next34",color=blue,style=solid];
    51 [label="indvar33",color=blue,style=solid];
    52 [label="unknown",color=blue,style=solid];
    53 [label="unknown",color=blue,style=solid];
    3 -> 18;
    3 -> 23;
    3 -> 39;
    3 -> 42;
    3 -> 43;
    4 -> 12;
    4 -> 17;
    4 -> 26;
    4 -> 28;
    4 -> 33;
    4 -> 36;
    5 -> 19;
    5 -> 21;
    5 -> 40;
    5 -> 44;
    5 -> 45;
    6 -> 14;
    6 -> 16;
    6 -> 27;
    6 -> 29;
    6 -> 34;
    6 -> 37;
    7 -> 20;
    7 -> 22;
    7 -> 41;
    7 -> 46;
    7 -> 47;
    7 -> 53;
    8 -> 13;
    8 -> 15;
    8 -> 30;
    8 -> 31;
    8 -> 35;
    8 -> 38;
    8 -> 52;
    10 -> 9;
    10 -> 11;
    10 -> 49;
    25 -> 24;
    25 -> 32;
    25 -> 48;
    51 -> 50;
    pts2 [label="#1",color=red,style=dashed,shape=box];
    2 -> pts2 [color=red,style=dashed];
    pts4 [label="#3",color=red,style=dashed,shape=box];
    4 -> pts4 [color=red,style=dashed];
    pts6 [label="#5",color=red,style=dashed,shape=box];
    6 -> pts6 [color=red,style=dashed];
    pts8 [label="#7",color=red,style=dashed,shape=box];
    8 -> pts8 [color=red,style=dashed];
    pts12 [label="#3",color=red,style=dashed,shape=box];
    12 -> pts12 [color=red,style=dashed];
    pts13 [label="#7",color=red,style=dashed,shape=box];
    13 -> pts13 [color=red,style=dashed];
    pts14 [label="#5",color=red,style=dashed,shape=box];
    14 -> pts14 [color=red,style=dashed];
    pts15 [label="#7",color=red,style=dashed,shape=box];
    15 -> pts15 [color=red,style=dashed];
    pts16 [label="#5",color=red,style=dashed,shape=box];
    16 -> pts16 [color=red,style=dashed];
    pts17 [label="#3",color=red,style=dashed,shape=box];
    17 -> pts17 [color=red,style=dashed];
    pts26 [label="#3",color=red,style=dashed,shape=box];
    26 -> pts26 [color=red,style=dashed];
    pts27 [label="#5",color=red,style=dashed,shape=box];
    27 -> pts27 [color=red,style=dashed];
    pts28 [label="#3",color=red,style=dashed,shape=box];
    28 -> pts28 [color=red,style=dashed];
    pts29 [label="#5",color=red,style=dashed,shape=box];
    29 -> pts29 [color=red,style=dashed];
    pts30 [label="#7",color=red,style=dashed,shape=box];
    30 -> pts30 [color=red,style=dashed];
    pts31 [label="#7",color=red,style=dashed,shape=box];
    31 -> pts31 [color=red,style=dashed];
    pts33 [label="#3",color=red,style=dashed,shape=box];
    33 -> pts33 [color=red,style=dashed];
    pts34 [label="#5",color=red,style=dashed,shape=box];
    34 -> pts34 [color=red,style=dashed];
    pts35 [label="#7",color=red,style=dashed,shape=box];
    35 -> pts35 [color=red,style=dashed];
    pts36 [label="#3",color=red,style=dashed,shape=box];
    36 -> pts36 [color=red,style=dashed];
    pts37 [label="#5",color=red,style=dashed,shape=box];
    37 -> pts37 [color=red,style=dashed];
    pts38 [label="#7",color=red,style=dashed,shape=box];
    38 -> pts38 [color=red,style=dashed];
    pts52 [label="#7",color=red,style=dashed,shape=box];
    52 -> pts52 [color=red,style=dashed];
}
%.pre -> { 
	Addr: %u1
		RAM: main_0_u1
			Adding Local RAM: main_0_u1 to Fct: @main
}
%.pre9 -> { 
	Addr: %u2
		RAM: main_0_u2
			Adding Local RAM: main_0_u2 to Fct: @main
}
%.pre11 -> { 
	Addr: %u3
		RAM: main_0_u3
			Adding Local RAM: main_0_u3 to Fct: @main
}
%.pre13 -> { 
	Addr: %u2
		RAM: main_0_u2
			Adding Local RAM: main_0_u2 to Fct: @main
}
%.pre15 -> { 
	Addr: %u3
		RAM: main_0_u3
			Adding Local RAM: main_0_u3 to Fct: @main
}
%.pre2 -> { 
	Addr: %u1
		RAM: main_0_u1
			Adding Local RAM: main_0_u1 to Fct: @main
}
%11 -> { 
	Addr: %u1
		RAM: main_0_u1
			Adding Local RAM: main_0_u1 to Fct: @main
}
%13 -> { 
	Addr: %u2
		RAM: main_0_u2
			Adding Local RAM: main_0_u2 to Fct: @main
}
%15 -> { 
	Addr: %u3
		RAM: main_0_u3
			Adding Local RAM: main_0_u3 to Fct: @main
}
%24 -> { 
	Addr: %u1
		RAM: main_0_u1
			Adding Local RAM: main_0_u1 to Fct: @main
}
%29 -> { 
	Addr: %u1
		RAM: main_0_u1
			Adding Local RAM: main_0_u1 to Fct: @main
}
<badref> -> { 
	Addr: %u1
		RAM: main_0_u1
			Adding Local RAM: main_0_u1 to Fct: @main
}
%39 -> { 
	Addr: %u2
		RAM: main_0_u2
			Adding Local RAM: main_0_u2 to Fct: @main
}
%44 -> { 
	Addr: %u2
		RAM: main_0_u2
			Adding Local RAM: main_0_u2 to Fct: @main
}
<badref> -> { 
	Addr: %u2
		RAM: main_0_u2
			Adding Local RAM: main_0_u2 to Fct: @main
}
%54 -> { 
	Addr: %u3
		RAM: main_0_u3
			Adding Local RAM: main_0_u3 to Fct: @main
}
%59 -> { 
	Addr: %u3
		RAM: main_0_u3
			Adding Local RAM: main_0_u3 to Fct: @main
}
<badref> -> { 
	Addr: %u3
		RAM: main_0_u3
			Adding Local RAM: main_0_u3 to Fct: @main
}
%69 -> { 
	Addr: %u3
		RAM: main_0_u3
			Adding Local RAM: main_0_u3 to Fct: @main
}
Final memory allocation:
Global Memories:
Local Memories:
	RAM: main_0_u1 Function: main
	RAM: main_0_u2 Function: main
	RAM: main_0_u3 Function: main
