//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Mon Jun  4 15:32:40 2018
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Mon Jun 25 16:59:10 2018
//----------------------------------------------------------------------------//

--------------------------------------------------------------------------------
Function: main
--------------------------------------------------------------------------------
Function unit type:           Number Required               
mem_dual_port                 2                             
unsigned_divide_64            1                             

Running Bipartite Weighted Matching on function: main
State: pipeline_time_0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %12 = load volatile i64* %sc... (idx: 0)        10                            10                            
  %14 = load volatile i64* %sc... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %12 = load volatile i64* %sc... (idx: 0)        1                             0                             
  %14 = load volatile i64* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %12 = load volatile i64* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %14 = load volatile i64* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 1)
State: pipeline_time_1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %21 = load volatile i64* %sc... (idx: 0)        11                            11                            
  %22 = load volatile i64* %sc... (idx: 1)        11                            11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %21 = load volatile i64* %sc... (idx: 0)        1                             0                             
  %22 = load volatile i64* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %21 = load volatile i64* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 2)
  %22 = load volatile i64* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 2)
State: pipeline_time_2
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %29 = load volatile i64* %sc... (idx: 0)        12                            12                            
  %30 = load volatile i32* %sc... (idx: 1)        12                            12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %29 = load volatile i64* %sc... (idx: 0)        1                             0                             
  %30 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %29 = load volatile i64* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 3)
  %30 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 3)
State: pipeline_time_2
Binding functional unit type: unsigned_divide_64
Weight matrix for operation/function unit matching:
                                                  main_unsigned_divide_64_0     
  %17 = udiv i64 %16, %15, !le... (idx: 0)        20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_unsigned_divide_64_0     
  %17 = udiv i64 %16, %15, !le... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %17 = udiv i64 %16, %15, !le... (idx: 0) -> main_unsigned_divide_64_0 (mux inputs: 2)
State: pipeline_time_3
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %37 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %37 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %38 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %38 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %37 = load volatile i64* %sc... (idx: 0)        8                             8                             
  %38 = load volatile i32* %sc... (idx: 1)        8                             8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %37 = load volatile i64* %sc... (idx: 0)        1                             0                             
  %38 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %37 = load volatile i64* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 4)
  %38 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 4)
State: pipeline_time_3
Binding functional unit type: unsigned_divide_64
Weight matrix for operation/function unit matching:
                                                  main_unsigned_divide_64_0     
  %25 = udiv i64 %24, %23, !le... (idx: 0)        22                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_unsigned_divide_64_0     
  %25 = udiv i64 %24, %23, !le... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %25 = udiv i64 %24, %23, !le... (idx: 0) -> main_unsigned_divide_64_0 (mux inputs: 4)
State: pipeline_time_4
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %51 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %51 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile i32 %58, i32*... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile i32 %58, i32*... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %51 = load volatile i64* %sc... (idx: 0)        9                             9                             
  store volatile i32 %58, i32*... (idx: 1)        19                            19                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %51 = load volatile i64* %sc... (idx: 0)        1                             0                             
  store volatile i32 %58, i32*... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %51 = load volatile i64* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 5)
  store volatile i32 %58, i32*... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 6)
State: pipeline_time_4
Binding functional unit type: unsigned_divide_64
Weight matrix for operation/function unit matching:
                                                  main_unsigned_divide_64_0     
  %34 = udiv i64 %33, %32, !le... (idx: 0)        24                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_unsigned_divide_64_0     
  %34 = udiv i64 %33, %32, !le... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %34 = udiv i64 %33, %32, !le... (idx: 0) -> main_unsigned_divide_64_0 (mux inputs: 6)
State: pipeline_time_5
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %53 = load volatile i32* %sc... (idx: 0)        15                            16                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %53 = load volatile i32* %sc... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %53 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 6)
State: pipeline_time_5
Binding functional unit type: unsigned_divide_64
Weight matrix for operation/function unit matching:
  %42 = udiv i64 %41, %40, !le... can share an output register with another operation already assigned to main_unsigned_divide_64_0
                                                  main_unsigned_divide_64_0     
  %42 = udiv i64 %41, %40, !le... (idx: 0)        21                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_unsigned_divide_64_0     
  %42 = udiv i64 %41, %40, !le... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %42 = udiv i64 %41, %40, !le... (idx: 0) -> main_unsigned_divide_64_0 (mux inputs: 8)
State: LEGUP_F_main_BB__59
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %60 = load volatile i32* get... can share an output register with another operation already assigned to main_mem_dual_port_0
  %60 = load volatile i32* get... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %60 = load volatile i32* get... (idx: 0)        1                             1                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %60 = load volatile i32* get... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %60 = load volatile i32* get... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 6)

