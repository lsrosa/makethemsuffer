//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Tue Feb 14 19:47:56 2017
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Fri Apr  7 13:44:18 2017
//----------------------------------------------------------------------------//

allocateRAM: %data
Constant: 0
allocateRAM: %mean
Constant: 0
allocateRAM: %stddev
Constant: 0
# of Vertices: 42
Representatives: 
1 -> 1
2 -> 2
3 -> 3
4 -> 4
5 -> 5
6 -> 6
7 -> 7
8 -> 8
9 -> 9
10 -> 10
11 -> 11
12 -> 12
13 -> 13
14 -> 14
15 -> 15
16 -> 16
17 -> 17
18 -> 18
19 -> 19
20 -> 20
21 -> 21
22 -> 22
23 -> 23
24 -> 24
25 -> 25
26 -> 26
27 -> 27
28 -> 28
29 -> 29
30 -> 30
31 -> 31
32 -> 32
33 -> 33
34 -> 34
35 -> 35
36 -> 36
37 -> 37
38 -> 38
39 -> 39
40 -> 40
41 -> 41
42 -> 42

Connections (Graph): 
1 -> 
2 -> 
3 -> 
4 -> 
5 -> 
6 -> 
7 -> 17 27 37 
8 -> 16 26 33 
9 -> 23 36 
10 -> 13 21 35 
11 -> 38 
12 -> 22 34 
13 -> 
14 -> 
15 -> 14 20 
16 -> 
17 -> 
18 -> 
19 -> 18 
20 -> 
21 -> 
22 -> 
23 -> 
24 -> 
25 -> 24 30 
26 -> 
27 -> 
28 -> 
29 -> 28 
30 -> 
31 -> 
32 -> 31 
33 -> 
34 -> 
35 -> 
36 -> 
37 -> 
38 -> 
39 -> 
40 -> 39 
41 -> 
42 -> 41 

Points-to-set: 
1 -> {}
2 -> {1, }
3 -> {}
4 -> {3, }
5 -> {}
6 -> {5, }
7 -> {}
8 -> {7, }
9 -> {}
10 -> {9, }
11 -> {}
12 -> {11, }
13 -> {9, }
14 -> {}
15 -> {}
16 -> {7, }
17 -> {}
18 -> {}
19 -> {}
20 -> {}
21 -> {9, }
22 -> {11, }
23 -> {}
24 -> {}
25 -> {}
26 -> {7, }
27 -> {}
28 -> {}
29 -> {}
30 -> {}
31 -> {}
32 -> {}
33 -> {7, }
34 -> {11, }
35 -> {9, }
36 -> {}
37 -> {}
38 -> {}
39 -> {}
40 -> {}
41 -> {}
42 -> {}

Variable: Int -> Value* mapping
8:   %data = alloca [2500 x float], align 4
10:   %mean = alloca [50 x float], align 4
15:   %2 = phi i32 [ 0, %0 ], [ %13, %11 ]
4: @.str1 = private unnamed_addr constant [6 x i8] c"loop3\00", align 1
6: @.str2 = private unnamed_addr constant [6 x i8] c"loop2\00", align 1
12:   %stddev = alloca [50 x float], align 4
13:   %scevgep16 = getelementptr [50 x float]* %mean, i32 0, i32 %2
2: @.str = private unnamed_addr constant [6 x i8] c"loop4\00", align 1
19:   %5 = phi i32 [ 0, %1 ], [ %10, %3 ]
14:   %7 = add i32 %2, %6
16:   %scevgep13 = getelementptr [2500 x float]* %data, i32 0, i32 %7
34:   %scevgep = getelementptr [50 x float]* %stddev, i32 0, i32 %35, !legup.pipeline.start_time !7, !legup.pipeline.avail_time !7, !legup.pipeline.stage !7
35:   %scevgep3 = getelementptr [50 x float]* %mean, i32 0, i32 %35, !legup.pipeline.start_time !7, !legup.pipeline.avail_time !7, !legup.pipeline.stage !7
36:   %37 = load float* %scevgep3, align 4, !tbaa !2, !legup.pipeline.start_time !7, !legup.pipeline.avail_time !6, !legup.pipeline.stage !7
37:   %38 = load float* %scevgep2, align 4, !tbaa !2, !legup.pipeline.start_time !6, !legup.pipeline.avail_time !8, !legup.pipeline.stage !7
38:   %40 = load float* %scevgep, align 4, !tbaa !2, !legup.pipeline.start_time !7, !legup.pipeline.avail_time !6, !legup.pipeline.stage !7
21:   %scevgep10 = getelementptr [50 x float]* %mean, i32 0, i32 %14
22:   %scevgep11 = getelementptr [50 x float]* %stddev, i32 0, i32 %14
23:   %15 = load float* %scevgep10, align 4, !tbaa !2
29:   %18 = phi i32 [ 0, %.preheader2 ], [ %25, %16 ]
42:   %32 = phi i32 [ %45, %44 ], [ 0, %.preheader1.preheader ]
17:   %8 = load float* %scevgep13, align 4, !tbaa !2
18:   %10 = add nsw i32 %5, 1
20:   %13 = add nsw i32 %2, 1
25:   %14 = phi i32 [ %31, %26 ], [ 0, %.preheader2.preheader ]
24:   %20 = add i32 %14, %19
26:   %scevgep7 = getelementptr [2500 x float]* %data, i32 0, i32 %20
27:   %21 = load float* %scevgep7, align 4, !tbaa !2
28:   %25 = add nsw i32 %18, 1
30:   %31 = add nsw i32 %14, 1
32:   %33 = mul i32 %32, 50
40:   %35 = phi i32 [ 0, %.preheader1 ], [ %43, %34 ], !legup.canonical_induction !6, !legup.pipeline.start_time !7, !legup.pipeline.avail_time !7, !legup.pipeline.stage !7
31:   %36 = add i32 %33, %35, !legup.pipeline.start_time !7, !legup.pipeline.avail_time !7, !legup.pipeline.stage !7
33:   %scevgep2 = getelementptr [2500 x float]* %data, i32 0, i32 %36, !legup.pipeline.start_time !6, !legup.pipeline.avail_time !6, !legup.pipeline.stage !7
39:   %43 = add nsw i32 %35, 1, !legup.pipeline.start_time !7, !legup.pipeline.avail_time !7, !legup.pipeline.stage !7
41:   %45 = add nsw i32 %32, 1
Memory: Int -> Value* mapping
7:   %data = alloca [2500 x float], align 4
9:   %mean = alloca [50 x float], align 4
3: @.str1 = private unnamed_addr constant [6 x i8] c"loop3\00", align 1
5: @.str2 = private unnamed_addr constant [6 x i8] c"loop2\00", align 1
11:   %stddev = alloca [50 x float], align 4
1: @.str = private unnamed_addr constant [6 x i8] c"loop4\00", align 1
digraph "correlation.bc" {
    1 [label="#1",color=blue,style=solid];
    2 [label=".str",color=blue,style=solid];
    3 [label="#3",color=blue,style=solid];
    4 [label=".str1",color=blue,style=solid];
    5 [label="#5",color=blue,style=solid];
    6 [label=".str2",color=blue,style=solid];
    7 [label="#7",color=blue,style=solid];
    8 [label="data",color=blue,style=solid];
    9 [label="#9",color=blue,style=solid];
    10 [label="mean",color=blue,style=solid];
    11 [label="#11",color=blue,style=solid];
    12 [label="stddev",color=blue,style=solid];
    13 [label="scevgep16",color=blue,style=solid];
    14 [label="unknown",color=blue,style=solid];
    15 [label="unknown",color=blue,style=solid];
    16 [label="scevgep13",color=blue,style=solid];
    17 [label="unknown",color=blue,style=solid];
    18 [label="unknown",color=blue,style=solid];
    19 [label="unknown",color=blue,style=solid];
    20 [label="unknown",color=blue,style=solid];
    21 [label="scevgep10",color=blue,style=solid];
    22 [label="scevgep11",color=blue,style=solid];
    23 [label="unknown",color=blue,style=solid];
    24 [label="unknown",color=blue,style=solid];
    25 [label="unknown",color=blue,style=solid];
    26 [label="scevgep7",color=blue,style=solid];
    27 [label="unknown",color=blue,style=solid];
    28 [label="unknown",color=blue,style=solid];
    29 [label="unknown",color=blue,style=solid];
    30 [label="unknown",color=blue,style=solid];
    31 [label="unknown",color=blue,style=solid];
    32 [label="unknown",color=blue,style=solid];
    33 [label="scevgep2",color=blue,style=solid];
    34 [label="scevgep",color=blue,style=solid];
    35 [label="scevgep3",color=blue,style=solid];
    36 [label="unknown",color=blue,style=solid];
    37 [label="unknown",color=blue,style=solid];
    38 [label="unknown",color=blue,style=solid];
    39 [label="unknown",color=blue,style=solid];
    40 [label="unknown",color=blue,style=solid];
    41 [label="unknown",color=blue,style=solid];
    42 [label="unknown",color=blue,style=solid];
    7 -> 17;
    7 -> 27;
    7 -> 37;
    8 -> 16;
    8 -> 26;
    8 -> 33;
    9 -> 23;
    9 -> 36;
    10 -> 13;
    10 -> 21;
    10 -> 35;
    11 -> 38;
    12 -> 22;
    12 -> 34;
    15 -> 14;
    15 -> 20;
    19 -> 18;
    25 -> 24;
    25 -> 30;
    29 -> 28;
    32 -> 31;
    40 -> 39;
    42 -> 41;
    pts2 [label="#1",color=red,style=dashed,shape=box];
    2 -> pts2 [color=red,style=dashed];
    pts4 [label="#3",color=red,style=dashed,shape=box];
    4 -> pts4 [color=red,style=dashed];
    pts6 [label="#5",color=red,style=dashed,shape=box];
    6 -> pts6 [color=red,style=dashed];
    pts8 [label="#7",color=red,style=dashed,shape=box];
    8 -> pts8 [color=red,style=dashed];
    pts10 [label="#9",color=red,style=dashed,shape=box];
    10 -> pts10 [color=red,style=dashed];
    pts12 [label="#11",color=red,style=dashed,shape=box];
    12 -> pts12 [color=red,style=dashed];
    pts13 [label="#9",color=red,style=dashed,shape=box];
    13 -> pts13 [color=red,style=dashed];
    pts16 [label="#7",color=red,style=dashed,shape=box];
    16 -> pts16 [color=red,style=dashed];
    pts21 [label="#9",color=red,style=dashed,shape=box];
    21 -> pts21 [color=red,style=dashed];
    pts22 [label="#11",color=red,style=dashed,shape=box];
    22 -> pts22 [color=red,style=dashed];
    pts26 [label="#7",color=red,style=dashed,shape=box];
    26 -> pts26 [color=red,style=dashed];
    pts33 [label="#7",color=red,style=dashed,shape=box];
    33 -> pts33 [color=red,style=dashed];
    pts34 [label="#11",color=red,style=dashed,shape=box];
    34 -> pts34 [color=red,style=dashed];
    pts35 [label="#9",color=red,style=dashed,shape=box];
    35 -> pts35 [color=red,style=dashed];
}
<badref> -> { 
	Addr: %mean
		RAM: main_0_mean
			Adding Local RAM: main_0_mean to Fct: @main
}
%8 -> { 
	Addr: %data
		RAM: main_0_data
			Adding Local RAM: main_0_data to Fct: @main
}
<badref> -> { 
	Addr: %mean
		RAM: main_0_mean
			Adding Local RAM: main_0_mean to Fct: @main
}
<badref> -> { 
	Addr: %stddev
		RAM: main_0_stddev
			Adding Local RAM: main_0_stddev to Fct: @main
}
%15 -> { 
	Addr: %mean
		RAM: main_0_mean
			Adding Local RAM: main_0_mean to Fct: @main
}
%21 -> { 
	Addr: %data
		RAM: main_0_data
			Adding Local RAM: main_0_data to Fct: @main
}
<badref> -> { 
	Addr: %stddev
		RAM: main_0_stddev
			Adding Local RAM: main_0_stddev to Fct: @main
}
%37 -> { 
	Addr: %mean
		RAM: main_0_mean
			Adding Local RAM: main_0_mean to Fct: @main
}
%38 -> { 
	Addr: %data
		RAM: main_0_data
			Adding Local RAM: main_0_data to Fct: @main
}
%40 -> { 
	Addr: %stddev
		RAM: main_0_stddev
			Adding Local RAM: main_0_stddev to Fct: @main
}
<badref> -> { 
	Addr: %data
		RAM: main_0_data
			Adding Local RAM: main_0_data to Fct: @main
}
Final memory allocation:
Global Memories:
Local Memories:
	RAM: main_0_data Function: main
	RAM: main_0_mean Function: main
	RAM: main_0_stddev Function: main
