//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Tue Feb 14 19:47:56 2017
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Thu Feb 23 13:33:52 2017
//----------------------------------------------------------------------------//

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: main
state: LEGUP_0
   Transition: if (start): LEGUP_F_main_BB__0_1 default: LEGUP_0
state: LEGUP_F_main_BB__0_1
   %1 = alloca [10000 x float], align 4 (endState: LEGUP_F_main_BB__0_1)
   br label %2
   Transition: default: LEGUP_F_main_BB__2_2
state: LEGUP_F_main_BB__2_2
   %t.03 = phi i32 [ 0, %0 ], [ %30, %29 ] (endState: LEGUP_F_main_BB__2_2)
   tail call void @__legup_label(i8* getelementptr inbounds ([3 x i8]* @.str, i32 0, i32 0)) #2 (endState: LEGUP_F_main_BB__2_2)
   br label %3
   Transition: default: LEGUP_F_main_BB__3_3
state: LEGUP_F_main_BB__3_3
   %indvar2 = phi i32 [ %indvar.next3, %28 ], [ 0, %2 ] (endState: LEGUP_F_main_BB__3_3)
   %4 = mul i32 %indvar2, 100 (endState: LEGUP_F_main_BB__3_4)
   tail call void @__legup_label(i8* getelementptr inbounds ([3 x i8]* @.str1, i32 0, i32 0)) #2 (endState: LEGUP_F_main_BB__3_3)
   Transition: default: LEGUP_F_main_BB__3_4
state: LEGUP_F_main_BB__3_4
   %5 = add i32 %4, 101 (endState: LEGUP_F_main_BB__3_4)
   %6 = add i32 %4, 100 (endState: LEGUP_F_main_BB__3_4)
   %7 = add i32 %4, 102 (endState: LEGUP_F_main_BB__3_4)
   %8 = add i32 %4, 201 (endState: LEGUP_F_main_BB__3_4)
   %9 = or i32 %4, 1 (endState: LEGUP_F_main_BB__3_4)
   br label %10
   Transition: default: LEGUP_loop_pipeline_wait_l1_1_5
state: LEGUP_loop_pipeline_wait_l1_1_5
   %indvar = phi i32 [ %indvar.next, %10 ], [ 0, %3 ], !legup.canonical_induction !2, !legup.pipeline.start_time !3, !legup.pipeline.avail_time !3, !legup.pipeline.stage !3 (endState: LEGUP_loop_pipeline_wait_l1_1_5)
   br i1 %exitcond1, label %28, label %10, !legup.pipelined !2, !legup.II !17, !legup.totalTime !19, !legup.maxStage !2, !legup.tripCount !20, !legup.label !21, !legup.pipeline.start_time !3, !legup.pipeline.avail_time !3, !legup.pipeline.stage !3
   Transition: if (l1_1_pipeline_finish): LEGUP_F_main_BB__28_6 default: LEGUP_loop_pipeline_wait_l1_1_5
state: LEGUP_F_main_BB__28_6
   %indvar.next3 = add i32 %indvar2, 1 (endState: LEGUP_F_main_BB__28_6)
   %exitcond = icmp eq i32 %indvar.next3, 98 (endState: LEGUP_F_main_BB__28_6)
   br i1 %exitcond, label %29, label %3
   Transition: if (%exitcond): LEGUP_F_main_BB__29_7 default: LEGUP_F_main_BB__3_3
state: LEGUP_F_main_BB__29_7
   %30 = add nsw i32 %t.03, 1 (endState: LEGUP_F_main_BB__29_7)
   %exitcond13 = icmp eq i32 %30, 100 (endState: LEGUP_F_main_BB__29_7)
   br i1 %exitcond13, label %31, label %2
   Transition: if (%exitcond13): LEGUP_F_main_BB__31_8 default: LEGUP_F_main_BB__2_2
state: LEGUP_F_main_BB__31_8
   %32 = getelementptr inbounds [10000 x float]* %1, i32 0, i32 9999 (endState: LEGUP_F_main_BB__31_8)
   %33 = load float* %32, align 4, !tbaa !4 (endState: LEGUP_F_main_BB__31_9)
   Transition: default: LEGUP_F_main_BB__31_9
state: LEGUP_F_main_BB__31_9
   %34 = fptosi float %33 to i32 (endState: LEGUP_F_main_BB__31_15)
   Transition: default: LEGUP_F_main_BB__31_10
state: LEGUP_F_main_BB__31_10
   Transition: default: LEGUP_F_main_BB__31_11
state: LEGUP_F_main_BB__31_11
   Transition: default: LEGUP_F_main_BB__31_12
state: LEGUP_F_main_BB__31_12
   Transition: default: LEGUP_F_main_BB__31_13
state: LEGUP_F_main_BB__31_13
   Transition: default: LEGUP_F_main_BB__31_14
state: LEGUP_F_main_BB__31_14
   Transition: default: LEGUP_F_main_BB__31_15
state: LEGUP_F_main_BB__31_15
   ret i32 %34
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %2 Num States: 1
Basic Block: %3 Num States: 2
Basic Block: %10 Num States: 1
Basic Block: %28 Num States: 1
Basic Block: %29 Num States: 1
Basic Block: %31 Num States: 8
End Function: main
--------------------------------------------------------------------------------

