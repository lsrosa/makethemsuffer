//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Mon Jun  4 15:32:40 2018
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Mon Jun 25 17:09:50 2018
//----------------------------------------------------------------------------//

--------------------------------------------------------------------------------
Function: main
--------------------------------------------------------------------------------
Function unit type:           Number Required               
mem_dual_port                 2                             
unsigned_divide_64            1                             

Running Bipartite Weighted Matching on function: main
State: pipeline_time_0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %31 = load volatile i64* %sc... (idx: 0)        10                            10                            
  %33 = load volatile i64* %sc... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %31 = load volatile i64* %sc... (idx: 0)        1                             0                             
  %33 = load volatile i64* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %31 = load volatile i64* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %33 = load volatile i64* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 1)
State: pipeline_time_1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %12 = load volatile i64* %sc... (idx: 0)        11                            11                            
  store volatile i64 %66, i64*... (idx: 1)        21                            21                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %12 = load volatile i64* %sc... (idx: 0)        1                             0                             
  store volatile i64 %66, i64*... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %12 = load volatile i64* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 2)
  store volatile i64 %66, i64*... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 3)
State: pipeline_time_2
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %22 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %27 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %22 = load volatile i64* %sc... (idx: 0)        12                            8                             
  %27 = load volatile i64* %sc... (idx: 1)        12                            8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %22 = load volatile i64* %sc... (idx: 0)        1                             0                             
  %27 = load volatile i64* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %22 = load volatile i64* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 3)
  %27 = load volatile i64* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 4)
State: pipeline_time_2
Binding functional unit type: unsigned_divide_64
Weight matrix for operation/function unit matching:
                                                  main_unsigned_divide_64_0     
  %35 = udiv i64 %34, %33, !le... (idx: 0)        20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_unsigned_divide_64_0     
  %35 = udiv i64 %34, %33, !le... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %35 = udiv i64 %34, %33, !le... (idx: 0) -> main_unsigned_divide_64_0 (mux inputs: 2)
State: pipeline_time_3
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %11 = load volatile i64* %sc... can share an input with another operation already assigned to main_mem_dual_port_0
  %11 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %11 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %16 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %16 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %11 = load volatile i64* %sc... (idx: 0)        -2                            9                             
  %16 = load volatile i64* %sc... (idx: 1)        8                             9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %11 = load volatile i64* %sc... (idx: 0)        1                             0                             
  %16 = load volatile i64* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %11 = load volatile i64* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 3)
  %16 = load volatile i64* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 5)
State: pipeline_time_4
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %17 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %17 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %41 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %41 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %17 = load volatile i64* %sc... (idx: 0)        8                             10                            
  %41 = load volatile i64* %sc... (idx: 1)        8                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %17 = load volatile i64* %sc... (idx: 0)        1                             0                             
  %41 = load volatile i64* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %17 = load volatile i64* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 4)
  %41 = load volatile i64* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 6)
State: pipeline_time_5
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %39 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %39 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %40 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %40 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %39 = load volatile i64* %sc... (idx: 0)        9                             11                            
  %40 = load volatile i64* %sc... (idx: 1)        9                             11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %39 = load volatile i64* %sc... (idx: 0)        1                             0                             
  %40 = load volatile i64* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %39 = load volatile i64* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 5)
  %40 = load volatile i64* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 7)
State: pipeline_time_5
Binding functional unit type: unsigned_divide_64
Weight matrix for operation/function unit matching:
                                                  main_unsigned_divide_64_0     
  %15 = udiv i64 %14, %13, !le... (idx: 0)        22                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_unsigned_divide_64_0     
  %15 = udiv i64 %14, %13, !le... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %15 = udiv i64 %14, %13, !le... (idx: 0) -> main_unsigned_divide_64_0 (mux inputs: 4)
State: pipeline_time_6
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %43 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %43 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %44 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %44 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %43 = load volatile i64* %sc... (idx: 0)        10                            12                            
  %44 = load volatile i64* %sc... (idx: 1)        10                            12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %43 = load volatile i64* %sc... (idx: 0)        1                             0                             
  %44 = load volatile i64* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %43 = load volatile i64* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 6)
  %44 = load volatile i64* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 8)
State: pipeline_time_7
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %26 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %26 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %45 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %45 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %26 = load volatile i64* %sc... (idx: 0)        11                            13                            
  %45 = load volatile i64* %sc... (idx: 1)        11                            13                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %26 = load volatile i64* %sc... (idx: 0)        1                             0                             
  %45 = load volatile i64* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %26 = load volatile i64* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 7)
  %45 = load volatile i64* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 9)
State: pipeline_time_8
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %21 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %21 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %42 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %42 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %21 = load volatile i64* %sc... (idx: 0)        12                            14                            
  %42 = load volatile i64* %sc... (idx: 1)        12                            14                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %21 = load volatile i64* %sc... (idx: 0)        1                             0                             
  %42 = load volatile i64* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %21 = load volatile i64* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 8)
  %42 = load volatile i64* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 10)
State: pipeline_time_9
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %36 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %36 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %37 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %37 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %36 = load volatile i64* %sc... (idx: 0)        13                            15                            
  %37 = load volatile i64* %sc... (idx: 1)        13                            15                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %36 = load volatile i64* %sc... (idx: 0)        1                             0                             
  %37 = load volatile i64* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %36 = load volatile i64* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 9)
  %37 = load volatile i64* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 11)
State: pipeline_time_10
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile i64 %57, i64*... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile i64 %57, i64*... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile i64 %57, i64*... (idx: 0)        24                            26                            
  %61 = load volatile i64* %sc... (idx: 1)        19                            21                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile i64 %57, i64*... (idx: 0)        1                             0                             
  %61 = load volatile i64* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile i64 %57, i64*... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 11)
  %61 = load volatile i64* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 12)
State: pipeline_time_11
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile i64 %60, i64*... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile i64 %60, i64*... can share an output register with another operation already assigned to main_mem_dual_port_1
  %62 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile i64 %60, i64*... (idx: 0)        26                            27                            
  %62 = load volatile i64* %sc... (idx: 1)        21                            17                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile i64 %60, i64*... (idx: 0)        1                             0                             
  %62 = load volatile i64* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile i64 %60, i64*... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 13)
  %62 = load volatile i64* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 13)
State: pipeline_time_12
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile i64 %52, i64*... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile i64 %52, i64*... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile i64 %52, i64*... (idx: 0)        28                            28                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile i64 %52, i64*... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile i64 %52, i64*... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 15)
State: LEGUP_F_main_BB__67
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %68 = load volatile i64* get... can share an output register with another operation already assigned to main_mem_dual_port_0
  %68 = load volatile i64* get... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %68 = load volatile i64* get... (idx: 0)        10                            8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %68 = load volatile i64* get... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %68 = load volatile i64* get... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 13)

