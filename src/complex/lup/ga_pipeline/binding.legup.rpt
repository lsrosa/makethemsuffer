//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Tue Feb 14 19:47:56 2017
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Tue Oct 31 18:14:56 2017
//----------------------------------------------------------------------------//

--------------------------------------------------------------------------------
Function: main
--------------------------------------------------------------------------------
Function unit type:           Number Required               
mem_dual_port                 2                             
unsigned_divide_64            1                             

Running Bipartite Weighted Matching on function: main
State: pipeline_time_0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %18 = load volatile i64* %sc... (idx: 0)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %18 = load volatile i64* %sc... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %18 = load volatile i64* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
State: pipeline_time_1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %22 = load volatile i64* %sc... (idx: 0)        11                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %22 = load volatile i64* %sc... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %22 = load volatile i64* %sc... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 1)
State: pipeline_time_2
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %13 = load volatile i64* %sc... (idx: 0)        11                            11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %13 = load volatile i64* %sc... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %13 = load volatile i64* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 2)
State: pipeline_time_3
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %63 = load volatile i64* %sc... (idx: 0)        12                            11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %63 = load volatile i64* %sc... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %63 = load volatile i64* %sc... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 2)
State: pipeline_time_4
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %32 = load volatile i64* %sc... (idx: 0)        12                            12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %32 = load volatile i64* %sc... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %32 = load volatile i64* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 3)
State: pipeline_time_5
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile i64 %53, i64*... (idx: 0)        23                            22                            
  store volatile i64 %61, i64*... (idx: 1)        23                            22                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile i64 %53, i64*... (idx: 0)        1                             0                             
  store volatile i64 %61, i64*... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile i64 %53, i64*... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 5)
  store volatile i64 %61, i64*... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 4)
State: pipeline_time_6
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %27 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %27 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %27 = load volatile i64* %sc... (idx: 0)        10                            9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %27 = load volatile i64* %sc... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %27 = load volatile i64* %sc... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 5)
State: pipeline_time_8
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %12 = load volatile i64* %sc... can share an input with another operation already assigned to main_mem_dual_port_0
  %12 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %12 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %17 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %17 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %12 = load volatile i64* %sc... (idx: 0)        0                             10                            
  %17 = load volatile i64* %sc... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %12 = load volatile i64* %sc... (idx: 0)        1                             0                             
  %17 = load volatile i64* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %12 = load volatile i64* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 5)
  %17 = load volatile i64* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 6)
State: pipeline_time_10
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %34 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %34 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %42 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %42 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %34 = load volatile i64* %sc... (idx: 0)        10                            11                            
  %42 = load volatile i64* %sc... (idx: 1)        10                            11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %34 = load volatile i64* %sc... (idx: 0)        1                             0                             
  %42 = load volatile i64* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %34 = load volatile i64* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 6)
  %42 = load volatile i64* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 7)
State: pipeline_time_11
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %23 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %23 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile i64 %67, i64*... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile i64 %67, i64*... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %23 = load volatile i64* %sc... (idx: 0)        11                            12                            
  store volatile i64 %67, i64*... (idx: 1)        21                            22                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %23 = load volatile i64* %sc... (idx: 0)        1                             0                             
  store volatile i64 %67, i64*... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %23 = load volatile i64* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 7)
  store volatile i64 %67, i64*... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 9)
State: pipeline_time_12
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %28 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %28 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %28 = load volatile i64* %sc... (idx: 0)        12                            14                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %28 = load volatile i64* %sc... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %28 = load volatile i64* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 8)
State: pipeline_time_13
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %45 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %45 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile i64 %58, i64*... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile i64 %58, i64*... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %45 = load volatile i64* %sc... (idx: 0)        13                            14                            
  store volatile i64 %58, i64*... (idx: 1)        23                            24                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %45 = load volatile i64* %sc... (idx: 0)        1                             0                             
  store volatile i64 %58, i64*... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %45 = load volatile i64* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 9)
  store volatile i64 %58, i64*... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 11)
State: pipeline_time_13
Binding functional unit type: unsigned_divide_64
Weight matrix for operation/function unit matching:
                                                  main_unsigned_divide_64_0     
  %36 = udiv i64 %35, %34, !le... (idx: 0)        20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_unsigned_divide_64_0     
  %36 = udiv i64 %35, %34, !le... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %36 = udiv i64 %35, %34, !le... (idx: 0) -> main_unsigned_divide_64_0 (mux inputs: 2)
State: pipeline_time_14
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %41 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %41 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %43 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %43 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %41 = load volatile i64* %sc... (idx: 0)        14                            16                            
  %43 = load volatile i64* %sc... (idx: 1)        14                            16                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %41 = load volatile i64* %sc... (idx: 0)        1                             0                             
  %43 = load volatile i64* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %41 = load volatile i64* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 10)
  %43 = load volatile i64* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 12)
State: pipeline_time_15
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %46 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %46 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %38 = load volatile i64* %sc... (idx: 0)        20                            22                            
  %46 = load volatile i64* %sc... (idx: 1)        15                            17                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %38 = load volatile i64* %sc... (idx: 0)        1                             0                             
  %46 = load volatile i64* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %38 = load volatile i64* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 11)
  %46 = load volatile i64* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 13)
State: pipeline_time_16
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %44 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %44 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %62 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %62 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %44 = load volatile i64* %sc... (idx: 0)        16                            18                            
  %62 = load volatile i64* %sc... (idx: 1)        16                            18                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %44 = load volatile i64* %sc... (idx: 0)        1                             0                             
  %62 = load volatile i64* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %44 = load volatile i64* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 12)
  %62 = load volatile i64* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 14)
State: pipeline_time_16
Binding functional unit type: unsigned_divide_64
Weight matrix for operation/function unit matching:
                                                  main_unsigned_divide_64_0     
  %16 = udiv i64 %15, %14, !le... (idx: 0)        22                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_unsigned_divide_64_0     
  %16 = udiv i64 %15, %14, !le... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %16 = udiv i64 %15, %14, !le... (idx: 0) -> main_unsigned_divide_64_0 (mux inputs: 4)
State: pipeline_time_17
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %40 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %40 = load volatile i64* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %40 = load volatile i64* %sc... (idx: 0)        17                            19                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %40 = load volatile i64* %sc... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %40 = load volatile i64* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 13)
State: pipeline_time_19
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %37 = load volatile i64* %sc... (idx: 0)        23                            24                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %37 = load volatile i64* %sc... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %37 = load volatile i64* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 14)
State: LEGUP_F_main_BB__68
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %69 = load volatile i64* get... can share an output register with another operation already assigned to main_mem_dual_port_0
  %69 = load volatile i64* get... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %69 = load volatile i64* get... (idx: 0)        9                             9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %69 = load volatile i64* get... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %69 = load volatile i64* get... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 14)

