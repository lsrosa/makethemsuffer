//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Tue Feb 14 19:47:56 2017
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Fri Apr  7 15:18:39 2017
//----------------------------------------------------------------------------//

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: gfmult_hw
state: LEGUP_0
   Transition: if (start): LEGUP_F_gfmult_hw_BB__0_1 default: LEGUP_0
state: LEGUP_F_gfmult_hw_BB__0_1
   %1 = zext i8 %b to i32 (endState: LEGUP_F_gfmult_hw_BB__0_1)
   %2 = zext i8 %a to i32 (endState: LEGUP_F_gfmult_hw_BB__0_1)
   %3 = and i32 %1, 1 (endState: LEGUP_F_gfmult_hw_BB__0_1)
   %4 = icmp eq i32 %3, 0 (endState: LEGUP_F_gfmult_hw_BB__0_1)
   %. = select i1 %4, i32 0, i32 %2 (endState: LEGUP_F_gfmult_hw_BB__0_1)
   %5 = and i32 %1, 2 (endState: LEGUP_F_gfmult_hw_BB__0_1)
   %6 = icmp eq i32 %5, 0 (endState: LEGUP_F_gfmult_hw_BB__0_1)
   br i1 %6, label %10, label %7
   Transition: if (%6): LEGUP_F_gfmult_hw_BB__10_3 default: LEGUP_F_gfmult_hw_BB__7_2
state: LEGUP_F_gfmult_hw_BB__7_2
   %8 = shl nuw nsw i32 %2, 1 (endState: LEGUP_F_gfmult_hw_BB__7_2)
   %9 = xor i32 %8, %. (endState: LEGUP_F_gfmult_hw_BB__7_2)
   br label %10
   Transition: default: LEGUP_F_gfmult_hw_BB__10_3
state: LEGUP_F_gfmult_hw_BB__10_3
   %temp.1.1 = phi i32 [ %9, %7 ], [ %., %0 ] (endState: LEGUP_F_gfmult_hw_BB__10_3)
   %11 = and i32 %1, 4 (endState: LEGUP_F_gfmult_hw_BB__10_3)
   %12 = icmp eq i32 %11, 0 (endState: LEGUP_F_gfmult_hw_BB__10_3)
   br i1 %12, label %16, label %13
   Transition: if (%12): LEGUP_F_gfmult_hw_BB__16_5 default: LEGUP_F_gfmult_hw_BB__13_4
state: LEGUP_F_gfmult_hw_BB__13_4
   %14 = shl nuw nsw i32 %2, 2 (endState: LEGUP_F_gfmult_hw_BB__13_4)
   %15 = xor i32 %14, %temp.1.1 (endState: LEGUP_F_gfmult_hw_BB__13_4)
   br label %16
   Transition: default: LEGUP_F_gfmult_hw_BB__16_5
state: LEGUP_F_gfmult_hw_BB__16_5
   %temp.1.2 = phi i32 [ %15, %13 ], [ %temp.1.1, %10 ] (endState: LEGUP_F_gfmult_hw_BB__16_5)
   %17 = and i32 %1, 8 (endState: LEGUP_F_gfmult_hw_BB__16_5)
   %18 = icmp eq i32 %17, 0 (endState: LEGUP_F_gfmult_hw_BB__16_5)
   br i1 %18, label %22, label %19
   Transition: if (%18): LEGUP_F_gfmult_hw_BB__22_7 default: LEGUP_F_gfmult_hw_BB__19_6
state: LEGUP_F_gfmult_hw_BB__19_6
   %20 = shl nuw nsw i32 %2, 3 (endState: LEGUP_F_gfmult_hw_BB__19_6)
   %21 = xor i32 %20, %temp.1.2 (endState: LEGUP_F_gfmult_hw_BB__19_6)
   br label %22
   Transition: default: LEGUP_F_gfmult_hw_BB__22_7
state: LEGUP_F_gfmult_hw_BB__22_7
   %temp.1.3 = phi i32 [ %21, %19 ], [ %temp.1.2, %16 ] (endState: LEGUP_F_gfmult_hw_BB__22_7)
   %23 = and i32 %1, 16 (endState: LEGUP_F_gfmult_hw_BB__22_7)
   %24 = icmp eq i32 %23, 0 (endState: LEGUP_F_gfmult_hw_BB__22_7)
   br i1 %24, label %28, label %25
   Transition: if (%24): LEGUP_F_gfmult_hw_BB__28_9 default: LEGUP_F_gfmult_hw_BB__25_8
state: LEGUP_F_gfmult_hw_BB__25_8
   %26 = shl nuw nsw i32 %2, 4 (endState: LEGUP_F_gfmult_hw_BB__25_8)
   %27 = xor i32 %26, %temp.1.3 (endState: LEGUP_F_gfmult_hw_BB__25_8)
   br label %28
   Transition: default: LEGUP_F_gfmult_hw_BB__28_9
state: LEGUP_F_gfmult_hw_BB__28_9
   %temp.1.4 = phi i32 [ %27, %25 ], [ %temp.1.3, %22 ] (endState: LEGUP_F_gfmult_hw_BB__28_9)
   %29 = and i32 %1, 32 (endState: LEGUP_F_gfmult_hw_BB__28_9)
   %30 = icmp eq i32 %29, 0 (endState: LEGUP_F_gfmult_hw_BB__28_9)
   br i1 %30, label %34, label %31
   Transition: if (%30): LEGUP_F_gfmult_hw_BB__34_11 default: LEGUP_F_gfmult_hw_BB__31_10
state: LEGUP_F_gfmult_hw_BB__31_10
   %32 = shl nuw nsw i32 %2, 5 (endState: LEGUP_F_gfmult_hw_BB__31_10)
   %33 = xor i32 %32, %temp.1.4 (endState: LEGUP_F_gfmult_hw_BB__31_10)
   br label %34
   Transition: default: LEGUP_F_gfmult_hw_BB__34_11
state: LEGUP_F_gfmult_hw_BB__34_11
   %temp.1.5 = phi i32 [ %33, %31 ], [ %temp.1.4, %28 ] (endState: LEGUP_F_gfmult_hw_BB__34_11)
   %35 = and i32 %1, 64 (endState: LEGUP_F_gfmult_hw_BB__34_11)
   %36 = icmp eq i32 %35, 0 (endState: LEGUP_F_gfmult_hw_BB__34_11)
   br i1 %36, label %40, label %37
   Transition: if (%36): LEGUP_F_gfmult_hw_BB__40_13 default: LEGUP_F_gfmult_hw_BB__37_12
state: LEGUP_F_gfmult_hw_BB__37_12
   %38 = shl nuw nsw i32 %2, 6 (endState: LEGUP_F_gfmult_hw_BB__37_12)
   %39 = xor i32 %38, %temp.1.5 (endState: LEGUP_F_gfmult_hw_BB__37_12)
   br label %40
   Transition: default: LEGUP_F_gfmult_hw_BB__40_13
state: LEGUP_F_gfmult_hw_BB__40_13
   %temp.1.6 = phi i32 [ %39, %37 ], [ %temp.1.5, %34 ] (endState: LEGUP_F_gfmult_hw_BB__40_13)
   %41 = and i32 %1, 128 (endState: LEGUP_F_gfmult_hw_BB__40_13)
   %42 = icmp eq i32 %41, 0 (endState: LEGUP_F_gfmult_hw_BB__40_13)
   br i1 %42, label %.preheader5, label %43
   Transition: if (%42): LEGUP_F_gfmult_hw_BB_preheader5_15 default: LEGUP_F_gfmult_hw_BB__43_14
state: LEGUP_F_gfmult_hw_BB__43_14
   %44 = shl nuw nsw i32 %2, 7 (endState: LEGUP_F_gfmult_hw_BB__43_14)
   %45 = xor i32 %44, %temp.1.6 (endState: LEGUP_F_gfmult_hw_BB__43_14)
   br label %.preheader5
   Transition: default: LEGUP_F_gfmult_hw_BB_preheader5_15
state: LEGUP_F_gfmult_hw_BB_preheader5_15
   %temp.1.7 = phi i32 [ %45, %43 ], [ %temp.1.6, %40 ] (endState: LEGUP_F_gfmult_hw_BB_preheader5_15)
   %46 = and i32 %temp.1.7, 32768 (endState: LEGUP_F_gfmult_hw_BB_preheader5_15)
   %47 = icmp eq i32 %46, 0 (endState: LEGUP_F_gfmult_hw_BB_preheader5_15)
   %48 = xor i32 %temp.1.7, 3712 (endState: LEGUP_F_gfmult_hw_BB_preheader5_15)
   %temp.3 = select i1 %47, i32 %temp.1.7, i32 %48 (endState: LEGUP_F_gfmult_hw_BB_preheader5_15)
   %49 = and i32 %temp.3, 16384 (endState: LEGUP_F_gfmult_hw_BB_preheader5_15)
   %50 = icmp eq i32 %49, 0 (endState: LEGUP_F_gfmult_hw_BB_preheader5_15)
   %51 = xor i32 %temp.3, 1856 (endState: LEGUP_F_gfmult_hw_BB_preheader5_15)
   %temp.3. = select i1 %50, i32 %temp.3, i32 %51 (endState: LEGUP_F_gfmult_hw_BB_preheader5_15)
   %52 = and i32 %temp.3., 8192 (endState: LEGUP_F_gfmult_hw_BB_preheader5_15)
   %53 = icmp eq i32 %52, 0 (endState: LEGUP_F_gfmult_hw_BB_preheader5_15)
   %54 = xor i32 %temp.3., 928 (endState: LEGUP_F_gfmult_hw_BB_preheader5_15)
   %temp.3.2 = select i1 %53, i32 %temp.3., i32 %54 (endState: LEGUP_F_gfmult_hw_BB_preheader5_15)
   %55 = and i32 %temp.3.2, 4096 (endState: LEGUP_F_gfmult_hw_BB_preheader5_15)
   Transition: default: LEGUP_F_gfmult_hw_BB_preheader5_16
state: LEGUP_F_gfmult_hw_BB_preheader5_16
   %56 = icmp eq i32 %55, 0 (endState: LEGUP_F_gfmult_hw_BB_preheader5_16)
   %57 = xor i32 %temp.3.2, 464 (endState: LEGUP_F_gfmult_hw_BB_preheader5_16)
   %temp.3.2. = select i1 %56, i32 %temp.3.2, i32 %57 (endState: LEGUP_F_gfmult_hw_BB_preheader5_16)
   %58 = and i32 %temp.3.2., 2048 (endState: LEGUP_F_gfmult_hw_BB_preheader5_16)
   %59 = icmp eq i32 %58, 0 (endState: LEGUP_F_gfmult_hw_BB_preheader5_16)
   %60 = xor i32 %temp.3.2., 232 (endState: LEGUP_F_gfmult_hw_BB_preheader5_16)
   %temp.3.4 = select i1 %59, i32 %temp.3.2., i32 %60 (endState: LEGUP_F_gfmult_hw_BB_preheader5_16)
   %61 = and i32 %temp.3.4, 1024 (endState: LEGUP_F_gfmult_hw_BB_preheader5_16)
   %62 = icmp eq i32 %61, 0 (endState: LEGUP_F_gfmult_hw_BB_preheader5_16)
   %63 = xor i32 %temp.3.4, 116 (endState: LEGUP_F_gfmult_hw_BB_preheader5_16)
   %temp.3.4. = select i1 %62, i32 %temp.3.4, i32 %63 (endState: LEGUP_F_gfmult_hw_BB_preheader5_16)
   %64 = and i32 %temp.3.4., 512 (endState: LEGUP_F_gfmult_hw_BB_preheader5_16)
   Transition: default: LEGUP_F_gfmult_hw_BB_preheader5_17
state: LEGUP_F_gfmult_hw_BB_preheader5_17
   %65 = icmp eq i32 %64, 0 (endState: LEGUP_F_gfmult_hw_BB_preheader5_17)
   %66 = xor i32 %temp.3.4., 58 (endState: LEGUP_F_gfmult_hw_BB_preheader5_17)
   %temp.3.6 = select i1 %65, i32 %temp.3.4., i32 %66 (endState: LEGUP_F_gfmult_hw_BB_preheader5_17)
   %67 = and i32 %temp.3.6, 256 (endState: LEGUP_F_gfmult_hw_BB_preheader5_17)
   %68 = icmp eq i32 %67, 0 (endState: LEGUP_F_gfmult_hw_BB_preheader5_17)
   %69 = xor i32 %temp.3.6, 29 (endState: LEGUP_F_gfmult_hw_BB_preheader5_17)
   %temp.3.6. = select i1 %68, i32 %temp.3.6, i32 %69 (endState: LEGUP_F_gfmult_hw_BB_preheader5_17)
   %70 = trunc i32 %temp.3.6. to i8 (endState: LEGUP_F_gfmult_hw_BB_preheader5_17)
   ret i8 %70
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %7 Num States: 1
Basic Block: %10 Num States: 1
Basic Block: %13 Num States: 1
Basic Block: %16 Num States: 1
Basic Block: %19 Num States: 1
Basic Block: %22 Num States: 1
Basic Block: %25 Num States: 1
Basic Block: %28 Num States: 1
Basic Block: %31 Num States: 1
Basic Block: %34 Num States: 1
Basic Block: %37 Num States: 1
Basic Block: %40 Num States: 1
Basic Block: %43 Num States: 1
Basic Block: %.preheader5 Num States: 3
End Function: gfmult_hw
--------------------------------------------------------------------------------

