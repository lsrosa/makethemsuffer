//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Mon Jun  4 15:32:40 2018
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Mon Jun 25 16:54:31 2018
//----------------------------------------------------------------------------//

--------------------------------------------------------------------------------
Function: main
--------------------------------------------------------------------------------
Function unit type:           Number Required               
mem_dual_port                 2                             

Running Bipartite Weighted Matching on function: main
State: pipeline_time_0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %7 = load volatile i64* %sce... (idx: 0)        10                            10                            
  %8 = load volatile i64* %sce... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %7 = load volatile i64* %sce... (idx: 0)        1                             0                             
  %8 = load volatile i64* %sce... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %7 = load volatile i64* %sce... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %8 = load volatile i64* %sce... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 1)
State: pipeline_time_1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %10 = load volatile i64* %sc... (idx: 0)        11                            11                            
  %11 = load volatile i64* %sc... (idx: 1)        11                            11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %10 = load volatile i64* %sc... (idx: 0)        1                             0                             
  %11 = load volatile i64* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %10 = load volatile i64* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 2)
  %11 = load volatile i64* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 2)
State: pipeline_time_2
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile i64 %15, i64*... (idx: 0)        22                            22                            
  %16 = load volatile i64* %sc... (idx: 1)        12                            12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile i64 %15, i64*... (idx: 0)        1                             0                             
  %16 = load volatile i64* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile i64 %15, i64*... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 4)
  %16 = load volatile i64* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 3)
State: pipeline_time_3
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %14 = load volatile i64* %sc... (idx: 0)        14                            13                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %14 = load volatile i64* %sc... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %14 = load volatile i64* %sc... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_main_BB__18
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %19 = load volatile i64* get... can share an output register with another operation already assigned to main_mem_dual_port_0
  %19 = load volatile i64* get... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %19 = load volatile i64* get... (idx: 0)        -1                            -1                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %19 = load volatile i64* get... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %19 = load volatile i64* get... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 4)

