//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Mon Jun  4 15:32:40 2018
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Wed Jan  2 17:41:08 2019
//----------------------------------------------------------------------------//

--------------------------------------------------------------------------------
Function: main
--------------------------------------------------------------------------------
Function unit type:           Number Required               
a2_local_mem_dual_port        1                             
a3_local_mem_dual_port        1                             
a_local_mem_dual_port         1                             
b2_local_mem_dual_port        1                             
b3_local_mem_dual_port        1                             
b_local_mem_dual_port         1                             
c2_local_mem_dual_port        1                             
c3_local_mem_dual_port        1                             
c_local_mem_dual_port         1                             
d2_local_mem_dual_port        1                             
d3_local_mem_dual_port        1                             
d_local_mem_dual_port         1                             
e2_local_mem_dual_port        1                             
e3_local_mem_dual_port        1                             
e_local_mem_dual_port         1                             
f2_local_mem_dual_port        1                             
f3_local_mem_dual_port        1                             
f_local_mem_dual_port         1                             
r1_local_mem_dual_port        1                             
r2_local_mem_dual_port        1                             
r3_local_mem_dual_port        1                             
r4_local_mem_dual_port        1                             
r5_local_mem_dual_port        1                             
r6_local_mem_dual_port        1                             
r7_local_mem_dual_port        1                             
r8_local_mem_dual_port        1                             
r9_local_mem_dual_port        1                             
signed_divide_32              3                             

Running Bipartite Weighted Matching on function: main
State: pipeline_time_0
Binding functional unit type: a2_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_a2_local_mem_dual_port_0 
  %11 = load volatile i32* %sc... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_a2_local_mem_dual_port_0 
  %11 = load volatile i32* %sc... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %11 = load volatile i32* %sc... (idx: 0) -> main_a2_local_mem_dual_port_0 (mux inputs: 1)
State: pipeline_time_0
Binding functional unit type: a3_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_a3_local_mem_dual_port_0 
  %20 = load volatile i32* %sc... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_a3_local_mem_dual_port_0 
  %20 = load volatile i32* %sc... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %20 = load volatile i32* %sc... (idx: 0) -> main_a3_local_mem_dual_port_0 (mux inputs: 1)
State: pipeline_time_0
Binding functional unit type: a_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_a_local_mem_dual_port_0  
  %2 = load volatile i32* %sce... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_a_local_mem_dual_port_0  
  %2 = load volatile i32* %sce... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %2 = load volatile i32* %sce... (idx: 0) -> main_a_local_mem_dual_port_0 (mux inputs: 1)
State: pipeline_time_0
Binding functional unit type: b2_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_b2_local_mem_dual_port_0 
  %12 = load volatile i32* %sc... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_b2_local_mem_dual_port_0 
  %12 = load volatile i32* %sc... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %12 = load volatile i32* %sc... (idx: 0) -> main_b2_local_mem_dual_port_0 (mux inputs: 1)
State: pipeline_time_0
Binding functional unit type: b3_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_b3_local_mem_dual_port_0 
  %21 = load volatile i32* %sc... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_b3_local_mem_dual_port_0 
  %21 = load volatile i32* %sc... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %21 = load volatile i32* %sc... (idx: 0) -> main_b3_local_mem_dual_port_0 (mux inputs: 1)
State: pipeline_time_0
Binding functional unit type: b_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_b_local_mem_dual_port_0  
  %3 = load volatile i32* %sce... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_b_local_mem_dual_port_0  
  %3 = load volatile i32* %sce... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %3 = load volatile i32* %sce... (idx: 0) -> main_b_local_mem_dual_port_0 (mux inputs: 1)
State: pipeline_time_0
Binding functional unit type: c2_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_c2_local_mem_dual_port_0 
  %14 = load volatile i32* %sc... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_c2_local_mem_dual_port_0 
  %14 = load volatile i32* %sc... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %14 = load volatile i32* %sc... (idx: 0) -> main_c2_local_mem_dual_port_0 (mux inputs: 1)
State: pipeline_time_0
Binding functional unit type: c3_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_c3_local_mem_dual_port_0 
  %23 = load volatile i32* %sc... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_c3_local_mem_dual_port_0 
  %23 = load volatile i32* %sc... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %23 = load volatile i32* %sc... (idx: 0) -> main_c3_local_mem_dual_port_0 (mux inputs: 1)
State: pipeline_time_0
Binding functional unit type: c_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_c_local_mem_dual_port_0  
  %5 = load volatile i32* %sce... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_c_local_mem_dual_port_0  
  %5 = load volatile i32* %sce... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %5 = load volatile i32* %sce... (idx: 0) -> main_c_local_mem_dual_port_0 (mux inputs: 1)
State: pipeline_time_0
Binding functional unit type: d2_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_d2_local_mem_dual_port_0 
  %15 = load volatile i32* %sc... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_d2_local_mem_dual_port_0 
  %15 = load volatile i32* %sc... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %15 = load volatile i32* %sc... (idx: 0) -> main_d2_local_mem_dual_port_0 (mux inputs: 1)
State: pipeline_time_0
Binding functional unit type: d3_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_d3_local_mem_dual_port_0 
  %24 = load volatile i32* %sc... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_d3_local_mem_dual_port_0 
  %24 = load volatile i32* %sc... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %24 = load volatile i32* %sc... (idx: 0) -> main_d3_local_mem_dual_port_0 (mux inputs: 1)
State: pipeline_time_0
Binding functional unit type: d_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_d_local_mem_dual_port_0  
  %6 = load volatile i32* %sce... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_d_local_mem_dual_port_0  
  %6 = load volatile i32* %sce... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %6 = load volatile i32* %sce... (idx: 0) -> main_d_local_mem_dual_port_0 (mux inputs: 1)
State: pipeline_time_0
Binding functional unit type: e2_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_e2_local_mem_dual_port_0 
  %17 = load volatile i32* %sc... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_e2_local_mem_dual_port_0 
  %17 = load volatile i32* %sc... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %17 = load volatile i32* %sc... (idx: 0) -> main_e2_local_mem_dual_port_0 (mux inputs: 1)
State: pipeline_time_0
Binding functional unit type: e3_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_e3_local_mem_dual_port_0 
  %26 = load volatile i32* %sc... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_e3_local_mem_dual_port_0 
  %26 = load volatile i32* %sc... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %26 = load volatile i32* %sc... (idx: 0) -> main_e3_local_mem_dual_port_0 (mux inputs: 1)
State: pipeline_time_0
Binding functional unit type: e_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_e_local_mem_dual_port_0  
  %8 = load volatile i32* %sce... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_e_local_mem_dual_port_0  
  %8 = load volatile i32* %sce... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %8 = load volatile i32* %sce... (idx: 0) -> main_e_local_mem_dual_port_0 (mux inputs: 1)
State: pipeline_time_0
Binding functional unit type: f2_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_f2_local_mem_dual_port_0 
  %18 = load volatile i32* %sc... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_f2_local_mem_dual_port_0 
  %18 = load volatile i32* %sc... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %18 = load volatile i32* %sc... (idx: 0) -> main_f2_local_mem_dual_port_0 (mux inputs: 1)
State: pipeline_time_0
Binding functional unit type: f3_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_f3_local_mem_dual_port_0 
  %27 = load volatile i32* %sc... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_f3_local_mem_dual_port_0 
  %27 = load volatile i32* %sc... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %27 = load volatile i32* %sc... (idx: 0) -> main_f3_local_mem_dual_port_0 (mux inputs: 1)
State: pipeline_time_0
Binding functional unit type: f_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_f_local_mem_dual_port_0  
  %9 = load volatile i32* %sce... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_f_local_mem_dual_port_0  
  %9 = load volatile i32* %sce... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %9 = load volatile i32* %sce... (idx: 0) -> main_f_local_mem_dual_port_0 (mux inputs: 1)
State: pipeline_time_0
Binding functional unit type: r1_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_r1_local_mem_dual_port_0 
  store volatile i32 %4, i32* ... (idx: 0)        20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_r1_local_mem_dual_port_0 
  store volatile i32 %4, i32* ... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile i32 %4, i32* ... (idx: 0) -> main_r1_local_mem_dual_port_0 (mux inputs: 2)
State: pipeline_time_0
Binding functional unit type: r2_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_r2_local_mem_dual_port_0 
  store volatile i32 %7, i32* ... (idx: 0)        20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_r2_local_mem_dual_port_0 
  store volatile i32 %7, i32* ... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile i32 %7, i32* ... (idx: 0) -> main_r2_local_mem_dual_port_0 (mux inputs: 2)
State: pipeline_time_0
Binding functional unit type: r3_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_r3_local_mem_dual_port_0 
  store volatile i32 %10, i32*... (idx: 0)        20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_r3_local_mem_dual_port_0 
  store volatile i32 %10, i32*... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile i32 %10, i32*... (idx: 0) -> main_r3_local_mem_dual_port_0 (mux inputs: 2)
State: pipeline_time_0
Binding functional unit type: r4_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_r4_local_mem_dual_port_0 
  store volatile i32 %13, i32*... (idx: 0)        20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_r4_local_mem_dual_port_0 
  store volatile i32 %13, i32*... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile i32 %13, i32*... (idx: 0) -> main_r4_local_mem_dual_port_0 (mux inputs: 2)
State: pipeline_time_0
Binding functional unit type: r5_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_r5_local_mem_dual_port_0 
  store volatile i32 %16, i32*... (idx: 0)        20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_r5_local_mem_dual_port_0 
  store volatile i32 %16, i32*... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile i32 %16, i32*... (idx: 0) -> main_r5_local_mem_dual_port_0 (mux inputs: 2)
State: pipeline_time_0
Binding functional unit type: r6_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_r6_local_mem_dual_port_0 
  store volatile i32 %19, i32*... (idx: 0)        20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_r6_local_mem_dual_port_0 
  store volatile i32 %19, i32*... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile i32 %19, i32*... (idx: 0) -> main_r6_local_mem_dual_port_0 (mux inputs: 2)
State: pipeline_time_1
Binding functional unit type: r7_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_r7_local_mem_dual_port_0 
  store volatile i32 %22, i32*... (idx: 0)        20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_r7_local_mem_dual_port_0 
  store volatile i32 %22, i32*... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile i32 %22, i32*... (idx: 0) -> main_r7_local_mem_dual_port_0 (mux inputs: 2)
State: pipeline_time_1
Binding functional unit type: r8_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_r8_local_mem_dual_port_0 
  store volatile i32 %25, i32*... (idx: 0)        20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_r8_local_mem_dual_port_0 
  store volatile i32 %25, i32*... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile i32 %25, i32*... (idx: 0) -> main_r8_local_mem_dual_port_0 (mux inputs: 2)
State: pipeline_time_1
Binding functional unit type: r9_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_r9_local_mem_dual_port_0 
  store volatile i32 %28, i32*... (idx: 0)        20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_r9_local_mem_dual_port_0 
  store volatile i32 %28, i32*... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile i32 %28, i32*... (idx: 0) -> main_r9_local_mem_dual_port_0 (mux inputs: 2)
State: pipeline_time_1
Binding functional unit type: signed_divide_32
Weight matrix for operation/function unit matching:
                                                  main_signed_divide_32_0       main_signed_divide_32_1       main_signed_divide_32_2       
  %22 = sdiv i32 %20, %21, !le... (idx: 0)        20                            20                            20                            
  %25 = sdiv i32 %23, %24, !le... (idx: 1)        20                            20                            20                            
  %28 = sdiv i32 %26, %27, !le... (idx: 2)        20                            20                            20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_divide_32_0       main_signed_divide_32_1       main_signed_divide_32_2       
  %22 = sdiv i32 %20, %21, !le... (idx: 0)        1                             0                             0                             
  %25 = sdiv i32 %23, %24, !le... (idx: 1)        0                             1                             0                             
  %28 = sdiv i32 %26, %27, !le... (idx: 2)        0                             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %22 = sdiv i32 %20, %21, !le... (idx: 0) -> main_signed_divide_32_0 (mux inputs: 2)
  %25 = sdiv i32 %23, %24, !le... (idx: 1) -> main_signed_divide_32_1 (mux inputs: 2)
  %28 = sdiv i32 %26, %27, !le... (idx: 2) -> main_signed_divide_32_2 (mux inputs: 2)

