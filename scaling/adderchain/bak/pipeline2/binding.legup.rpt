//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Mon Jun  4 15:32:40 2018
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Wed Jun  6 16:52:21 2018
//----------------------------------------------------------------------------//

--------------------------------------------------------------------------------
Function: main
--------------------------------------------------------------------------------
Function unit type:           Number Required               
mem_dual_port                 2                             

Running Bipartite Weighted Matching on function: main
State: pipeline_time_0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile i32 %70, i32*... (idx: 0)        20                            20                            
  store volatile i32 %128, i32... (idx: 1)        20                            20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile i32 %70, i32*... (idx: 0)        1                             0                             
  store volatile i32 %128, i32... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile i32 %70, i32*... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 2)
  store volatile i32 %128, i32... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 2)
State: pipeline_time_1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %21 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %21 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %25 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %25 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %21 = load volatile i32* %sc... (idx: 0)        7                             7                             
  %25 = load volatile i32* %sc... (idx: 1)        7                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %21 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %25 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %21 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 3)
  %25 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 3)
State: pipeline_time_2
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %13 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %13 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %14 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %14 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %13 = load volatile i32* %sc... (idx: 0)        8                             8                             
  %14 = load volatile i32* %sc... (idx: 1)        8                             8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %13 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %14 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %13 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 4)
  %14 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 4)
State: pipeline_time_3
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %71 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %71 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %72 = load volatile i32* %sc... can share an input with another operation already assigned to main_mem_dual_port_0
  %72 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %72 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %71 = load volatile i32* %sc... (idx: 0)        9                             9                             
  %72 = load volatile i32* %sc... (idx: 1)        -1                            9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %71 = load volatile i32* %sc... (idx: 0)        0                             1                             
  %72 = load volatile i32* %sc... (idx: 1)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %72 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_0 (mux inputs: 4)
  %71 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 5)
State: pipeline_time_4
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %15 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %15 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %73 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %73 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %15 = load volatile i32* %sc... (idx: 0)        9                             10                            
  %73 = load volatile i32* %sc... (idx: 1)        9                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %15 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %73 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %15 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 5)
  %73 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 6)
State: pipeline_time_5
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %16 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %16 = load volatile i32* %sc... can share an input with another operation already assigned to main_mem_dual_port_1
  %16 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %74 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %74 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %16 = load volatile i32* %sc... (idx: 0)        10                            1                             
  %74 = load volatile i32* %sc... (idx: 1)        10                            11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %16 = load volatile i32* %sc... (idx: 0)        0                             1                             
  %74 = load volatile i32* %sc... (idx: 1)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %74 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_0 (mux inputs: 6)
  %16 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 6)
State: pipeline_time_6
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %17 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %17 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %75 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %75 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %17 = load volatile i32* %sc... (idx: 0)        11                            11                            
  %75 = load volatile i32* %sc... (idx: 1)        11                            11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %17 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %75 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %17 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 7)
  %75 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 7)
State: pipeline_time_7
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %18 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %18 = load volatile i32* %sc... can share an input with another operation already assigned to main_mem_dual_port_1
  %18 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %19 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %19 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %18 = load volatile i32* %sc... (idx: 0)        12                            2                             
  %19 = load volatile i32* %sc... (idx: 1)        12                            12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %18 = load volatile i32* %sc... (idx: 0)        0                             1                             
  %19 = load volatile i32* %sc... (idx: 1)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %19 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_0 (mux inputs: 8)
  %18 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 7)
State: pipeline_time_8
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %20 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %20 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %22 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %22 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %20 = load volatile i32* %sc... (idx: 0)        13                            12                            
  %22 = load volatile i32* %sc... (idx: 1)        13                            12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %20 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %22 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %20 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 9)
  %22 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 8)
State: pipeline_time_9
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %23 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %23 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %24 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %24 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %23 = load volatile i32* %sc... (idx: 0)        14                            13                            
  %24 = load volatile i32* %sc... (idx: 1)        14                            13                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %23 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %24 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %23 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 10)
  %24 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 9)
State: pipeline_time_10
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %26 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %26 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile i32 %38, i32*... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile i32 %38, i32*... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %26 = load volatile i32* %sc... (idx: 0)        15                            14                            
  store volatile i32 %38, i32*... (idx: 1)        25                            24                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %26 = load volatile i32* %sc... (idx: 0)        1                             0                             
  store volatile i32 %38, i32*... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %26 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 11)
  store volatile i32 %38, i32*... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 11)
State: pipeline_time_11
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %27 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %27 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %28 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %28 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %27 = load volatile i32* %sc... (idx: 0)        16                            16                            
  %28 = load volatile i32* %sc... (idx: 1)        16                            16                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %27 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %28 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %27 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 12)
  %28 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 12)
State: pipeline_time_12
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %30 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %30 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %31 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %31 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %30 = load volatile i32* %sc... (idx: 0)        17                            17                            
  %31 = load volatile i32* %sc... (idx: 1)        17                            17                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %30 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %31 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %30 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 13)
  %31 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 13)
State: pipeline_time_13
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile i32 %46, i32*... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile i32 %46, i32*... can share an output register with another operation already assigned to main_mem_dual_port_1
  %76 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %76 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile i32 %46, i32*... (idx: 0)        28                            28                            
  %76 = load volatile i32* %sc... (idx: 1)        18                            18                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile i32 %46, i32*... (idx: 0)        1                             0                             
  %76 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile i32 %46, i32*... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 15)
  %76 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 14)
State: pipeline_time_14
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %77 = load volatile i32* %sc... can share an input with another operation already assigned to main_mem_dual_port_0
  %77 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %77 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %78 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %78 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %77 = load volatile i32* %sc... (idx: 0)        10                            19                            
  %78 = load volatile i32* %sc... (idx: 1)        20                            19                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %77 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %78 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %77 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 15)
  %78 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 15)
State: pipeline_time_15
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %79 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %79 = load volatile i32* %sc... can share an input with another operation already assigned to main_mem_dual_port_1
  %79 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %80 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %80 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %79 = load volatile i32* %sc... (idx: 0)        20                            10                            
  %80 = load volatile i32* %sc... (idx: 1)        20                            20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %79 = load volatile i32* %sc... (idx: 0)        0                             1                             
  %80 = load volatile i32* %sc... (idx: 1)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %80 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_0 (mux inputs: 16)
  %79 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 15)
State: pipeline_time_16
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %81 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %81 = load volatile i32* %sc... can share an input with another operation already assigned to main_mem_dual_port_1
  %81 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile i32 %96, i32*... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile i32 %96, i32*... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %81 = load volatile i32* %sc... (idx: 0)        21                            10                            
  store volatile i32 %96, i32*... (idx: 1)        31                            30                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %81 = load volatile i32* %sc... (idx: 0)        0                             1                             
  store volatile i32 %96, i32*... (idx: 1)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile i32 %96, i32*... (idx: 1) -> main_mem_dual_port_0 (mux inputs: 18)
  %81 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 15)
State: pipeline_time_17
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %82 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %82 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %83 = load volatile i32* %sc... can share an input with another operation already assigned to main_mem_dual_port_0
  %83 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %83 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %82 = load volatile i32* %sc... (idx: 0)        23                            20                            
  %83 = load volatile i32* %sc... (idx: 1)        13                            20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %82 = load volatile i32* %sc... (idx: 0)        0                             1                             
  %83 = load volatile i32* %sc... (idx: 1)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %83 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_0 (mux inputs: 18)
  %82 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 16)
State: pipeline_time_18
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %84 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %84 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %85 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %85 = load volatile i32* %sc... can share an input with another operation already assigned to main_mem_dual_port_1
  %85 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %84 = load volatile i32* %sc... (idx: 0)        23                            21                            
  %85 = load volatile i32* %sc... (idx: 1)        23                            11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %84 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %85 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %84 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 19)
  %85 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 16)
State: pipeline_time_19
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %86 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %86 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %87 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %87 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %86 = load volatile i32* %sc... (idx: 0)        24                            21                            
  %87 = load volatile i32* %sc... (idx: 1)        24                            21                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %86 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %87 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %86 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 20)
  %87 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 17)
State: pipeline_time_20
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %88 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %88 = load volatile i32* %sc... can share an input with another operation already assigned to main_mem_dual_port_1
  %88 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %89 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %89 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %88 = load volatile i32* %sc... (idx: 0)        25                            12                            
  %89 = load volatile i32* %sc... (idx: 1)        25                            22                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %88 = load volatile i32* %sc... (idx: 0)        0                             1                             
  %89 = load volatile i32* %sc... (idx: 1)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %89 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_0 (mux inputs: 21)
  %88 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 17)
State: pipeline_time_21
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %29 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %29 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile i32 %104, i32... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile i32 %104, i32... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %29 = load volatile i32* %sc... (idx: 0)        26                            22                            
  store volatile i32 %104, i32... (idx: 1)        36                            32                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %29 = load volatile i32* %sc... (idx: 0)        1                             0                             
  store volatile i32 %104, i32... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %29 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 22)
  store volatile i32 %104, i32... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 19)
State: pipeline_time_22
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile i32 %107, i32... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile i32 %107, i32... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %50 = load volatile i32* %sc... (idx: 0)        32                            29                            
  store volatile i32 %107, i32... (idx: 1)        37                            34                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %50 = load volatile i32* %sc... (idx: 0)        1                             0                             
  store volatile i32 %107, i32... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %50 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 23)
  store volatile i32 %107, i32... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 21)
State: pipeline_time_23
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile i32 %49, i32*... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile i32 %49, i32*... can share an output register with another operation already assigned to main_mem_dual_port_1
  %108 = load volatile i32* %s... can share an input with another operation already assigned to main_mem_dual_port_0
  %108 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_0
  %108 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile i32 %49, i32*... (idx: 0)        38                            36                            
  %108 = load volatile i32* %s... (idx: 1)        18                            26                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile i32 %49, i32*... (idx: 0)        0                             1                             
  %108 = load volatile i32* %s... (idx: 1)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %108 = load volatile i32* %s... (idx: 1) -> main_mem_dual_port_0 (mux inputs: 23)
  store volatile i32 %49, i32*... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 23)
State: LEGUP_F_main_BB__129
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %130 = load volatile i32* ge... can share an output register with another operation already assigned to main_mem_dual_port_0
  %130 = load volatile i32* ge... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %130 = load volatile i32* ge... (idx: 0)        18                            18                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %130 = load volatile i32* ge... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %130 = load volatile i32* ge... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 23)

