//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Mon Jun  4 15:32:40 2018
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Wed Jun  6 16:57:06 2018
//----------------------------------------------------------------------------//

--------------------------------------------------------------------------------
Function: main
--------------------------------------------------------------------------------
Function unit type:           Number Required               
mem_dual_port                 2                             

Running Bipartite Weighted Matching on function: main
State: pipeline_time_0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %109 = load volatile i32* %s... (idx: 0)        10                            10                            
  store volatile i32 %187, i32... (idx: 1)        20                            20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %109 = load volatile i32* %s... (idx: 0)        1                             0                             
  store volatile i32 %187, i32... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %109 = load volatile i32* %s... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  store volatile i32 %187, i32... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 2)
State: pipeline_time_1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %22 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %26 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %22 = load volatile i32* %sc... (idx: 0)        11                            7                             
  %26 = load volatile i32* %sc... (idx: 1)        11                            7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %22 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %26 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %22 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 2)
  %26 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 3)
State: pipeline_time_2
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %14 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %15 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %14 = load volatile i32* %sc... (idx: 0)        12                            8                             
  %15 = load volatile i32* %sc... (idx: 1)        12                            8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %14 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %15 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %14 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 3)
  %15 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 4)
State: pipeline_time_3
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %16 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %16 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %72 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %72 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %16 = load volatile i32* %sc... (idx: 0)        8                             9                             
  %72 = load volatile i32* %sc... (idx: 1)        8                             9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %16 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %72 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %16 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 4)
  %72 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 5)
State: pipeline_time_4
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %73 = load volatile i32* %sc... can share an input with another operation already assigned to main_mem_dual_port_0
  %73 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %73 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %130 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_0
  %130 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %73 = load volatile i32* %sc... (idx: 0)        -1                            10                            
  %130 = load volatile i32* %s... (idx: 1)        9                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %73 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %130 = load volatile i32* %s... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %73 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 4)
  %130 = load volatile i32* %s... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 6)
State: pipeline_time_5
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %17 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %17 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %131 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_0
  %131 = load volatile i32* %s... can share an input with another operation already assigned to main_mem_dual_port_1
  %131 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %17 = load volatile i32* %sc... (idx: 0)        9                             11                            
  %131 = load volatile i32* %s... (idx: 1)        9                             1                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %17 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %131 = load volatile i32* %s... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %17 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 5)
  %131 = load volatile i32* %s... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 6)
State: pipeline_time_6
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %74 = load volatile i32* %sc... can share an input with another operation already assigned to main_mem_dual_port_0
  %74 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %74 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %132 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_0
  %132 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %74 = load volatile i32* %sc... (idx: 0)        0                             11                            
  %132 = load volatile i32* %s... (idx: 1)        10                            11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %74 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %132 = load volatile i32* %s... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %74 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 5)
  %132 = load volatile i32* %s... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 7)
State: pipeline_time_7
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %18 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %18 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %75 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %75 = load volatile i32* %sc... can share an input with another operation already assigned to main_mem_dual_port_1
  %75 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %18 = load volatile i32* %sc... (idx: 0)        10                            12                            
  %75 = load volatile i32* %sc... (idx: 1)        10                            2                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %18 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %75 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %18 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 6)
  %75 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 7)
State: pipeline_time_8
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %76 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %76 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %133 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_0
  %133 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %76 = load volatile i32* %sc... (idx: 0)        11                            12                            
  %133 = load volatile i32* %s... (idx: 1)        11                            12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %76 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %133 = load volatile i32* %s... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %76 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 7)
  %133 = load volatile i32* %s... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 8)
State: pipeline_time_9
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %19 = load volatile i32* %sc... can share an input with another operation already assigned to main_mem_dual_port_0
  %19 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %19 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %134 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_0
  %134 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %19 = load volatile i32* %sc... (idx: 0)        2                             13                            
  %134 = load volatile i32* %s... (idx: 1)        12                            13                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %19 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %134 = load volatile i32* %s... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %19 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 7)
  %134 = load volatile i32* %s... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 9)
State: pipeline_time_10
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %20 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %20 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %21 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %21 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %20 = load volatile i32* %sc... (idx: 0)        12                            14                            
  %21 = load volatile i32* %sc... (idx: 1)        12                            14                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %20 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %21 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %20 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 8)
  %21 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 10)
State: pipeline_time_11
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %23 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %23 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %24 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %24 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %23 = load volatile i32* %sc... (idx: 0)        13                            15                            
  %24 = load volatile i32* %sc... (idx: 1)        13                            15                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %23 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %24 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %23 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 9)
  %24 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 11)
State: pipeline_time_12
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %25 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %25 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile i32 %39, i32*... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile i32 %39, i32*... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %25 = load volatile i32* %sc... (idx: 0)        14                            16                            
  store volatile i32 %39, i32*... (idx: 1)        24                            26                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %25 = load volatile i32* %sc... (idx: 0)        1                             0                             
  store volatile i32 %39, i32*... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %25 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 10)
  store volatile i32 %39, i32*... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 13)
State: pipeline_time_13
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %27 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %27 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %28 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %28 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %27 = load volatile i32* %sc... (idx: 0)        15                            18                            
  %28 = load volatile i32* %sc... (idx: 1)        15                            18                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %27 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %28 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %27 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 11)
  %28 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 14)
State: pipeline_time_14
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %29 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %29 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %31 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %31 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %29 = load volatile i32* %sc... (idx: 0)        16                            19                            
  %31 = load volatile i32* %sc... (idx: 1)        16                            19                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %29 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %31 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %29 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 12)
  %31 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 15)
State: pipeline_time_15
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %32 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %32 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %77 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %77 = load volatile i32* %sc... can share an input with another operation already assigned to main_mem_dual_port_1
  %77 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %32 = load volatile i32* %sc... (idx: 0)        17                            20                            
  %77 = load volatile i32* %sc... (idx: 1)        17                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %32 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %77 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %32 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 13)
  %77 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 15)
State: pipeline_time_16
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile i32 %47, i32*... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile i32 %47, i32*... can share an output register with another operation already assigned to main_mem_dual_port_1
  %78 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %78 = load volatile i32* %sc... can share an input with another operation already assigned to main_mem_dual_port_1
  %78 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile i32 %47, i32*... (idx: 0)        28                            30                            
  %78 = load volatile i32* %sc... (idx: 1)        18                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile i32 %47, i32*... (idx: 0)        1                             0                             
  %78 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile i32 %47, i32*... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 15)
  %78 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 15)
State: pipeline_time_17
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %79 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %79 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %80 = load volatile i32* %sc... can share an input with another operation already assigned to main_mem_dual_port_0
  %80 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %80 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %79 = load volatile i32* %sc... (idx: 0)        20                            20                            
  %80 = load volatile i32* %sc... (idx: 1)        10                            20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %79 = load volatile i32* %sc... (idx: 0)        0                             1                             
  %80 = load volatile i32* %sc... (idx: 1)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %80 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_0 (mux inputs: 15)
  %79 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 16)
State: pipeline_time_18
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %81 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %81 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %82 = load volatile i32* %sc... can share an input with another operation already assigned to main_mem_dual_port_0
  %82 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %82 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %81 = load volatile i32* %sc... (idx: 0)        20                            21                            
  %82 = load volatile i32* %sc... (idx: 1)        10                            21                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %81 = load volatile i32* %sc... (idx: 0)        0                             1                             
  %82 = load volatile i32* %sc... (idx: 1)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %82 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_0 (mux inputs: 15)
  %81 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 17)
State: pipeline_time_19
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %83 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %83 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile i32 %97, i32*... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile i32 %97, i32*... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %83 = load volatile i32* %sc... (idx: 0)        20                            22                            
  store volatile i32 %97, i32*... (idx: 1)        30                            32                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %83 = load volatile i32* %sc... (idx: 0)        1                             0                             
  store volatile i32 %97, i32*... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %83 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 16)
  store volatile i32 %97, i32*... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 19)
State: pipeline_time_20
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %84 = load volatile i32* %sc... can share an input with another operation already assigned to main_mem_dual_port_0
  %84 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %84 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %85 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %85 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %84 = load volatile i32* %sc... (idx: 0)        11                            24                            
  %85 = load volatile i32* %sc... (idx: 1)        21                            24                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %84 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %85 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %84 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 16)
  %85 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 20)
State: pipeline_time_21
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %86 = load volatile i32* %sc... can share an input with another operation already assigned to main_mem_dual_port_0
  %86 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %86 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %87 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %87 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %86 = load volatile i32* %sc... (idx: 0)        11                            25                            
  %87 = load volatile i32* %sc... (idx: 1)        21                            25                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %86 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %87 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %86 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 16)
  %87 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 21)
State: pipeline_time_22
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %88 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %88 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %89 = load volatile i32* %sc... can share an input with another operation already assigned to main_mem_dual_port_0
  %89 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %89 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %88 = load volatile i32* %sc... (idx: 0)        21                            26                            
  %89 = load volatile i32* %sc... (idx: 1)        11                            26                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %88 = load volatile i32* %sc... (idx: 0)        0                             1                             
  %89 = load volatile i32* %sc... (idx: 1)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %89 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_0 (mux inputs: 16)
  %88 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 22)
State: pipeline_time_23
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %90 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %90 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile i32 %105, i32... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile i32 %105, i32... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %90 = load volatile i32* %sc... (idx: 0)        21                            27                            
  store volatile i32 %105, i32... (idx: 1)        31                            37                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %90 = load volatile i32* %sc... (idx: 0)        1                             0                             
  store volatile i32 %105, i32... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %90 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 17)
  store volatile i32 %105, i32... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 24)
State: pipeline_time_24
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %135 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_0
  %135 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
  %136 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_0
  %136 = load volatile i32* %s... can share an input with another operation already assigned to main_mem_dual_port_1
  %136 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %135 = load volatile i32* %s... (idx: 0)        22                            29                            
  %136 = load volatile i32* %s... (idx: 1)        22                            19                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %135 = load volatile i32* %s... (idx: 0)        1                             0                             
  %136 = load volatile i32* %s... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %135 = load volatile i32* %s... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 18)
  %136 = load volatile i32* %s... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 24)
State: pipeline_time_25
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile i32 %108, i32... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile i32 %108, i32... can share an output register with another operation already assigned to main_mem_dual_port_1
  %137 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_0
  %137 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile i32 %108, i32... (idx: 0)        33                            39                            
  %137 = load volatile i32* %s... (idx: 1)        23                            29                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile i32 %108, i32... (idx: 0)        1                             0                             
  %137 = load volatile i32* %s... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile i32 %108, i32... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 20)
  %137 = load volatile i32* %s... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 25)
State: pipeline_time_26
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %138 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_0
  %138 = load volatile i32* %s... can share an input with another operation already assigned to main_mem_dual_port_1
  %138 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
  %139 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_0
  %139 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %138 = load volatile i32* %s... (idx: 0)        25                            20                            
  %139 = load volatile i32* %s... (idx: 1)        25                            30                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %138 = load volatile i32* %s... (idx: 0)        0                             1                             
  %139 = load volatile i32* %s... (idx: 1)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %139 = load volatile i32* %s... (idx: 1) -> main_mem_dual_port_0 (mux inputs: 21)
  %138 = load volatile i32* %s... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 25)
State: pipeline_time_27
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %140 = load volatile i32* %s... can share an input with another operation already assigned to main_mem_dual_port_0
  %140 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_0
  %140 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile i32 %155, i32... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile i32 %155, i32... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %140 = load volatile i32* %s... (idx: 0)        16                            30                            
  store volatile i32 %155, i32... (idx: 1)        36                            40                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %140 = load volatile i32* %s... (idx: 0)        1                             0                             
  store volatile i32 %155, i32... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %140 = load volatile i32* %s... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 21)
  store volatile i32 %155, i32... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 27)
State: pipeline_time_28
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %141 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_0
  %141 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
  %142 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_0
  %142 = load volatile i32* %s... can share an input with another operation already assigned to main_mem_dual_port_1
  %142 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %141 = load volatile i32* %s... (idx: 0)        26                            32                            
  %142 = load volatile i32* %s... (idx: 1)        26                            22                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %141 = load volatile i32* %s... (idx: 0)        1                             0                             
  %142 = load volatile i32* %s... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %141 = load volatile i32* %s... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 22)
  %142 = load volatile i32* %s... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 27)
State: pipeline_time_29
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %143 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_0
  %143 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
  %144 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_0
  %144 = load volatile i32* %s... can share an input with another operation already assigned to main_mem_dual_port_1
  %144 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %143 = load volatile i32* %s... (idx: 0)        27                            32                            
  %144 = load volatile i32* %s... (idx: 1)        27                            22                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %143 = load volatile i32* %s... (idx: 0)        1                             0                             
  %144 = load volatile i32* %s... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %143 = load volatile i32* %s... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 23)
  %144 = load volatile i32* %s... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 27)
State: pipeline_time_30
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %145 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_0
  %145 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
  %146 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_0
  %146 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %145 = load volatile i32* %s... (idx: 0)        28                            32                            
  %146 = load volatile i32* %s... (idx: 1)        28                            32                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %145 = load volatile i32* %s... (idx: 0)        1                             0                             
  %146 = load volatile i32* %s... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %145 = load volatile i32* %s... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 24)
  %146 = load volatile i32* %s... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 28)
State: pipeline_time_31
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %147 = load volatile i32* %s... can share an input with another operation already assigned to main_mem_dual_port_0
  %147 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_0
  %147 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
  %148 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_0
  %148 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %147 = load volatile i32* %s... (idx: 0)        19                            33                            
  %148 = load volatile i32* %s... (idx: 1)        29                            33                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %147 = load volatile i32* %s... (idx: 0)        1                             0                             
  %148 = load volatile i32* %s... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %147 = load volatile i32* %s... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 24)
  %148 = load volatile i32* %s... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 29)
State: pipeline_time_32
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %30 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %30 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile i32 %163, i32... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile i32 %163, i32... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %30 = load volatile i32* %sc... (idx: 0)        29                            34                            
  store volatile i32 %163, i32... (idx: 1)        39                            44                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %30 = load volatile i32* %sc... (idx: 0)        1                             0                             
  store volatile i32 %163, i32... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %30 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 25)
  store volatile i32 %163, i32... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 31)
State: pipeline_time_33
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %51 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_0
  %51 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile i32 %166, i32... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile i32 %166, i32... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %51 = load volatile i32* %sc... (idx: 0)        30                            36                            
  store volatile i32 %166, i32... (idx: 1)        40                            46                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %51 = load volatile i32* %sc... (idx: 0)        1                             0                             
  store volatile i32 %166, i32... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %51 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 26)
  store volatile i32 %166, i32... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 33)
State: pipeline_time_34
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile i32 %50, i32*... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile i32 %50, i32*... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile i32 %129, i32... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile i32 %129, i32... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile i32 %50, i32*... (idx: 0)        41                            48                            
  store volatile i32 %129, i32... (idx: 1)        41                            48                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile i32 %50, i32*... (idx: 0)        1                             0                             
  store volatile i32 %129, i32... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile i32 %50, i32*... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 28)
  store volatile i32 %129, i32... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 35)
State: pipeline_time_35
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile i32 %71, i32*... can share an input with another operation already assigned to main_mem_dual_port_0
  store volatile i32 %71, i32*... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile i32 %71, i32*... can share an output register with another operation already assigned to main_mem_dual_port_1
  %167 = load volatile i32* %s... can share an input with another operation already assigned to main_mem_dual_port_1
  %167 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile i32 %71, i32*... (idx: 0)        33                            50                            
  %167 = load volatile i32* %s... (idx: 1)        38                            30                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile i32 %71, i32*... (idx: 0)        1                             0                             
  %167 = load volatile i32* %s... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile i32 %71, i32*... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 29)
  %167 = load volatile i32* %s... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 35)
State: LEGUP_F_main_BB__188
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %189 = load volatile i32* ge... can share an output register with another operation already assigned to main_mem_dual_port_0
  %189 = load volatile i32* ge... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %189 = load volatile i32* ge... (idx: 0)        24                            30                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %189 = load volatile i32* ge... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %189 = load volatile i32* ge... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 29)

