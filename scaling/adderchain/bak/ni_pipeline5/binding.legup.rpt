//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Mon Jun  4 15:32:40 2018
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Wed Jun  6 16:37:28 2018
//----------------------------------------------------------------------------//

--------------------------------------------------------------------------------
Function: main
--------------------------------------------------------------------------------
Function unit type:           Number Required               
mem_dual_port                 2                             

Running Bipartite Weighted Matching on function: main
State: pipeline_time_0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %285 = load volatile i32* %s... (idx: 0)        10                            10                            
  store volatile i32 %305, i32... (idx: 1)        20                            20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %285 = load volatile i32* %s... (idx: 0)        1                             0                             
  store volatile i32 %305, i32... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %285 = load volatile i32* %s... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  store volatile i32 %305, i32... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 2)
State: pipeline_time_1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %24 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %28 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %24 = load volatile i32* %sc... (idx: 0)        11                            7                             
  %28 = load volatile i32* %sc... (idx: 1)        11                            7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %24 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %28 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %24 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 2)
  %28 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 3)
State: pipeline_time_2
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %32 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %53 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %32 = load volatile i32* %sc... (idx: 0)        12                            8                             
  %53 = load volatile i32* %sc... (idx: 1)        12                            8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %32 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %53 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %32 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 3)
  %53 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 4)
State: pipeline_time_3
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %145 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
  %196 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %145 = load volatile i32* %s... (idx: 0)        13                            9                             
  %196 = load volatile i32* %s... (idx: 1)        13                            9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %145 = load volatile i32* %s... (idx: 0)        1                             0                             
  %196 = load volatile i32* %s... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %145 = load volatile i32* %s... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 4)
  %196 = load volatile i32* %s... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 5)
State: pipeline_time_4
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %146 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
  %147 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %146 = load volatile i32* %s... (idx: 0)        14                            10                            
  %147 = load volatile i32* %s... (idx: 1)        14                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %146 = load volatile i32* %s... (idx: 0)        1                             0                             
  %147 = load volatile i32* %s... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %146 = load volatile i32* %s... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 5)
  %147 = load volatile i32* %s... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 6)
State: pipeline_time_5
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %148 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
  %149 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %148 = load volatile i32* %s... (idx: 0)        15                            11                            
  %149 = load volatile i32* %s... (idx: 1)        15                            11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %148 = load volatile i32* %s... (idx: 0)        1                             0                             
  %149 = load volatile i32* %s... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %148 = load volatile i32* %s... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 6)
  %149 = load volatile i32* %s... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 7)
State: pipeline_time_6
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %150 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
  %191 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %150 = load volatile i32* %s... (idx: 0)        16                            12                            
  %191 = load volatile i32* %s... (idx: 1)        16                            12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %150 = load volatile i32* %s... (idx: 0)        1                             0                             
  %191 = load volatile i32* %s... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %150 = load volatile i32* %s... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 7)
  %191 = load volatile i32* %s... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 8)
State: pipeline_time_7
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %192 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
  %193 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %192 = load volatile i32* %s... (idx: 0)        17                            13                            
  %193 = load volatile i32* %s... (idx: 1)        17                            13                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %192 = load volatile i32* %s... (idx: 0)        1                             0                             
  %193 = load volatile i32* %s... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %192 = load volatile i32* %s... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 8)
  %193 = load volatile i32* %s... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 9)
State: pipeline_time_8
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %194 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
  %195 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %194 = load volatile i32* %s... (idx: 0)        18                            14                            
  %195 = load volatile i32* %s... (idx: 1)        18                            14                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %194 = load volatile i32* %s... (idx: 0)        1                             0                             
  %195 = load volatile i32* %s... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %194 = load volatile i32* %s... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 9)
  %195 = load volatile i32* %s... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 10)
State: pipeline_time_9
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %144 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
  %198 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %144 = load volatile i32* %s... (idx: 0)        19                            15                            
  %198 = load volatile i32* %s... (idx: 1)        19                            15                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %144 = load volatile i32* %s... (idx: 0)        1                             0                             
  %198 = load volatile i32* %s... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %144 = load volatile i32* %s... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 10)
  %198 = load volatile i32* %s... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 11)
State: pipeline_time_10
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %142 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
  %143 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %142 = load volatile i32* %s... (idx: 0)        20                            16                            
  %143 = load volatile i32* %s... (idx: 1)        20                            16                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %142 = load volatile i32* %s... (idx: 0)        1                             0                             
  %143 = load volatile i32* %s... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %142 = load volatile i32* %s... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 11)
  %143 = load volatile i32* %s... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 12)
State: pipeline_time_11
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %140 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
  %141 = load volatile i32* %s... can share an input with another operation already assigned to main_mem_dual_port_1
  %141 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %140 = load volatile i32* %s... (idx: 0)        21                            17                            
  %141 = load volatile i32* %s... (idx: 1)        21                            7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %140 = load volatile i32* %s... (idx: 0)        1                             0                             
  %141 = load volatile i32* %s... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %140 = load volatile i32* %s... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 12)
  %141 = load volatile i32* %s... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 12)
State: pipeline_time_12
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %138 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
  %139 = load volatile i32* %s... can share an input with another operation already assigned to main_mem_dual_port_1
  %139 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %138 = load volatile i32* %s... (idx: 0)        22                            17                            
  %139 = load volatile i32* %s... (idx: 1)        22                            7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %138 = load volatile i32* %s... (idx: 0)        1                             0                             
  %139 = load volatile i32* %s... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %138 = load volatile i32* %s... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 13)
  %139 = load volatile i32* %s... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 12)
State: pipeline_time_13
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %136 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
  %137 = load volatile i32* %s... can share an input with another operation already assigned to main_mem_dual_port_0
  %137 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %136 = load volatile i32* %s... (idx: 0)        23                            17                            
  %137 = load volatile i32* %s... (idx: 1)        13                            17                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %136 = load volatile i32* %s... (idx: 0)        0                             1                             
  %137 = load volatile i32* %s... (idx: 1)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %137 = load volatile i32* %s... (idx: 1) -> main_mem_dual_port_0 (mux inputs: 13)
  %136 = load volatile i32* %s... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 13)
State: pipeline_time_14
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %134 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
  %135 = load volatile i32* %s... can share an input with another operation already assigned to main_mem_dual_port_0
  %135 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %134 = load volatile i32* %s... (idx: 0)        23                            18                            
  %135 = load volatile i32* %s... (idx: 1)        13                            18                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %134 = load volatile i32* %s... (idx: 0)        0                             1                             
  %135 = load volatile i32* %s... (idx: 1)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %135 = load volatile i32* %s... (idx: 1) -> main_mem_dual_port_0 (mux inputs: 13)
  %134 = load volatile i32* %s... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 14)
State: pipeline_time_15
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %132 = load volatile i32* %s... can share an input with another operation already assigned to main_mem_dual_port_1
  %132 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
  %133 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %132 = load volatile i32* %s... (idx: 0)        23                            9                             
  %133 = load volatile i32* %s... (idx: 1)        23                            19                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %132 = load volatile i32* %s... (idx: 0)        0                             1                             
  %133 = load volatile i32* %s... (idx: 1)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %133 = load volatile i32* %s... (idx: 1) -> main_mem_dual_port_0 (mux inputs: 14)
  %132 = load volatile i32* %s... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 14)
State: pipeline_time_16
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %190 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
  %259 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %190 = load volatile i32* %s... (idx: 0)        24                            19                            
  %259 = load volatile i32* %s... (idx: 1)        24                            19                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %190 = load volatile i32* %s... (idx: 0)        1                             0                             
  %259 = load volatile i32* %s... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %190 = load volatile i32* %s... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 15)
  %259 = load volatile i32* %s... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 15)
State: pipeline_time_17
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %248 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
  %250 = load volatile i32* %s... can share an input with another operation already assigned to main_mem_dual_port_1
  %250 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %248 = load volatile i32* %s... (idx: 0)        25                            20                            
  %250 = load volatile i32* %s... (idx: 1)        25                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %248 = load volatile i32* %s... (idx: 0)        1                             0                             
  %250 = load volatile i32* %s... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %248 = load volatile i32* %s... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 16)
  %250 = load volatile i32* %s... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 15)
State: pipeline_time_18
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %251 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
  %252 = load volatile i32* %s... can share an input with another operation already assigned to main_mem_dual_port_1
  %252 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %251 = load volatile i32* %s... (idx: 0)        26                            20                            
  %252 = load volatile i32* %s... (idx: 1)        26                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %251 = load volatile i32* %s... (idx: 0)        1                             0                             
  %252 = load volatile i32* %s... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %251 = load volatile i32* %s... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 17)
  %252 = load volatile i32* %s... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 15)
State: pipeline_time_19
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %253 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
  %254 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %253 = load volatile i32* %s... (idx: 0)        27                            20                            
  %254 = load volatile i32* %s... (idx: 1)        27                            20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %253 = load volatile i32* %s... (idx: 0)        1                             0                             
  %254 = load volatile i32* %s... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %253 = load volatile i32* %s... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 18)
  %254 = load volatile i32* %s... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 16)
State: pipeline_time_20
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %255 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
  %256 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %255 = load volatile i32* %s... (idx: 0)        28                            21                            
  %256 = load volatile i32* %s... (idx: 1)        28                            21                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %255 = load volatile i32* %s... (idx: 0)        1                             0                             
  %256 = load volatile i32* %s... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %255 = load volatile i32* %s... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 19)
  %256 = load volatile i32* %s... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 17)
State: pipeline_time_21
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %257 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
  %258 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %257 = load volatile i32* %s... (idx: 0)        29                            22                            
  %258 = load volatile i32* %s... (idx: 1)        29                            22                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %257 = load volatile i32* %s... (idx: 0)        1                             0                             
  %258 = load volatile i32* %s... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %257 = load volatile i32* %s... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 20)
  %258 = load volatile i32* %s... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 18)
State: pipeline_time_22
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %207 = load volatile i32* %s... can share an input with another operation already assigned to main_mem_dual_port_0
  %207 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
  %208 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %207 = load volatile i32* %s... (idx: 0)        20                            23                            
  %208 = load volatile i32* %s... (idx: 1)        30                            23                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %207 = load volatile i32* %s... (idx: 0)        1                             0                             
  %208 = load volatile i32* %s... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %207 = load volatile i32* %s... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 20)
  %208 = load volatile i32* %s... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 19)
State: pipeline_time_23
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %205 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
  %206 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %205 = load volatile i32* %s... (idx: 0)        30                            24                            
  %206 = load volatile i32* %s... (idx: 1)        30                            24                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %205 = load volatile i32* %s... (idx: 0)        1                             0                             
  %206 = load volatile i32* %s... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %205 = load volatile i32* %s... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 21)
  %206 = load volatile i32* %s... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 20)
State: pipeline_time_24
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %197 = load volatile i32* %s... can share an input with another operation already assigned to main_mem_dual_port_1
  %197 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
  %260 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %197 = load volatile i32* %s... (idx: 0)        31                            15                            
  %260 = load volatile i32* %s... (idx: 1)        31                            25                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %197 = load volatile i32* %s... (idx: 0)        0                             1                             
  %260 = load volatile i32* %s... (idx: 1)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %260 = load volatile i32* %s... (idx: 1) -> main_mem_dual_port_0 (mux inputs: 22)
  %197 = load volatile i32* %s... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 20)
State: pipeline_time_25
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %204 = load volatile i32* %s... can share an input with another operation already assigned to main_mem_dual_port_1
  %204 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
  %261 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %204 = load volatile i32* %s... (idx: 0)        32                            15                            
  %261 = load volatile i32* %s... (idx: 1)        32                            25                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %204 = load volatile i32* %s... (idx: 0)        0                             1                             
  %261 = load volatile i32* %s... (idx: 1)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %261 = load volatile i32* %s... (idx: 1) -> main_mem_dual_port_0 (mux inputs: 23)
  %204 = load volatile i32* %s... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 20)
State: pipeline_time_26
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %262 = load volatile i32* %s... can share an input with another operation already assigned to main_mem_dual_port_0
  %262 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
  %263 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %262 = load volatile i32* %s... (idx: 0)        23                            25                            
  %263 = load volatile i32* %s... (idx: 1)        33                            25                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %262 = load volatile i32* %s... (idx: 0)        1                             0                             
  %263 = load volatile i32* %s... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %262 = load volatile i32* %s... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 23)
  %263 = load volatile i32* %s... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 21)
State: pipeline_time_27
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %264 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
  %265 = load volatile i32* %s... can share an input with another operation already assigned to main_mem_dual_port_1
  %265 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %264 = load volatile i32* %s... (idx: 0)        33                            26                            
  %265 = load volatile i32* %s... (idx: 1)        33                            16                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %264 = load volatile i32* %s... (idx: 0)        1                             0                             
  %265 = load volatile i32* %s... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %264 = load volatile i32* %s... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 24)
  %265 = load volatile i32* %s... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 21)
State: pipeline_time_28
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %202 = load volatile i32* %s... can share an input with another operation already assigned to main_mem_dual_port_0
  %202 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
  %203 = load volatile i32* %s... can share an input with another operation already assigned to main_mem_dual_port_0
  %203 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %202 = load volatile i32* %s... (idx: 0)        24                            26                            
  %203 = load volatile i32* %s... (idx: 1)        24                            26                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %202 = load volatile i32* %s... (idx: 0)        1                             0                             
  %203 = load volatile i32* %s... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %202 = load volatile i32* %s... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 24)
  %203 = load volatile i32* %s... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 22)
State: pipeline_time_29
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %200 = load volatile i32* %s... can share an input with another operation already assigned to main_mem_dual_port_1
  %200 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
  %201 = load volatile i32* %s... can share an input with another operation already assigned to main_mem_dual_port_1
  %201 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %200 = load volatile i32* %s... (idx: 0)        34                            17                            
  %201 = load volatile i32* %s... (idx: 1)        34                            17                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %200 = load volatile i32* %s... (idx: 0)        1                             0                             
  %201 = load volatile i32* %s... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %200 = load volatile i32* %s... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 25)
  %201 = load volatile i32* %s... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 22)
State: pipeline_time_30
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %199 = load volatile i32* %s... can share an input with another operation already assigned to main_mem_dual_port_1
  %199 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
  %266 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %199 = load volatile i32* %s... (idx: 0)        35                            17                            
  %266 = load volatile i32* %s... (idx: 1)        35                            27                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %199 = load volatile i32* %s... (idx: 0)        0                             1                             
  %266 = load volatile i32* %s... (idx: 1)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %266 = load volatile i32* %s... (idx: 1) -> main_mem_dual_port_0 (mux inputs: 26)
  %199 = load volatile i32* %s... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 22)
State: pipeline_time_31
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %16 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %249 = load volatile i32* %s... can share an input with another operation already assigned to main_mem_dual_port_0
  %249 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %16 = load volatile i32* %sc... (idx: 0)        36                            27                            
  %249 = load volatile i32* %s... (idx: 1)        26                            27                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %16 = load volatile i32* %sc... (idx: 0)        0                             1                             
  %249 = load volatile i32* %s... (idx: 1)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %249 = load volatile i32* %s... (idx: 1) -> main_mem_dual_port_0 (mux inputs: 26)
  %16 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 23)
State: pipeline_time_32
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %31 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %87 = load volatile i32* %sc... can share an input with another operation already assigned to main_mem_dual_port_0
  %87 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %31 = load volatile i32* %sc... (idx: 0)        36                            28                            
  %87 = load volatile i32* %sc... (idx: 1)        26                            28                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %31 = load volatile i32* %sc... (idx: 0)        0                             1                             
  %87 = load volatile i32* %sc... (idx: 1)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %87 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_0 (mux inputs: 26)
  %31 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 24)
State: pipeline_time_33
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %29 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %88 = load volatile i32* %sc... can share an input with another operation already assigned to main_mem_dual_port_1
  %88 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %29 = load volatile i32* %sc... (idx: 0)        36                            29                            
  %88 = load volatile i32* %sc... (idx: 1)        36                            19                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %29 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %88 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %29 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 27)
  %88 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 24)
State: pipeline_time_34
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %89 = load volatile i32* %sc... can share an input with another operation already assigned to main_mem_dual_port_0
  %89 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %90 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %89 = load volatile i32* %sc... (idx: 0)        27                            29                            
  %90 = load volatile i32* %sc... (idx: 1)        37                            29                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %89 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %90 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %89 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 27)
  %90 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 25)
State: pipeline_time_35
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %91 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %92 = load volatile i32* %sc... can share an input with another operation already assigned to main_mem_dual_port_1
  %92 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %91 = load volatile i32* %sc... (idx: 0)        37                            30                            
  %92 = load volatile i32* %sc... (idx: 1)        37                            20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %91 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %92 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %91 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 28)
  %92 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 25)
State: pipeline_time_36
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %30 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %76 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %30 = load volatile i32* %sc... (idx: 0)        38                            30                            
  %76 = load volatile i32* %sc... (idx: 1)        38                            30                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %30 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %76 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %30 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 29)
  %76 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 26)
State: pipeline_time_37
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %20 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %21 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %20 = load volatile i32* %sc... (idx: 0)        39                            31                            
  %21 = load volatile i32* %sc... (idx: 1)        39                            31                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %20 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %21 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %20 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 30)
  %21 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 27)
State: pipeline_time_38
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %22 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %75 = load volatile i32* %sc... can share an input with another operation already assigned to main_mem_dual_port_1
  %75 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %22 = load volatile i32* %sc... (idx: 0)        40                            32                            
  %75 = load volatile i32* %sc... (idx: 1)        40                            22                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %22 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %75 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %22 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 31)
  %75 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 27)
State: pipeline_time_39
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %19 = load volatile i32* %sc... can share an input with another operation already assigned to main_mem_dual_port_1
  %19 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %74 = load volatile i32* %sc... can share an input with another operation already assigned to main_mem_dual_port_0
  %74 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %19 = load volatile i32* %sc... (idx: 0)        41                            22                            
  %74 = load volatile i32* %sc... (idx: 1)        31                            32                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %19 = load volatile i32* %sc... (idx: 0)        0                             1                             
  %74 = load volatile i32* %sc... (idx: 1)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %74 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_0 (mux inputs: 31)
  %19 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 27)
State: pipeline_time_40
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %17 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %18 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %17 = load volatile i32* %sc... (idx: 0)        41                            32                            
  %18 = load volatile i32* %sc... (idx: 1)        41                            32                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %17 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %18 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %17 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 32)
  %18 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 28)
State: pipeline_time_41
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %23 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %86 = load volatile i32* %sc... can share an input with another operation already assigned to main_mem_dual_port_0
  %86 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %23 = load volatile i32* %sc... (idx: 0)        42                            33                            
  %86 = load volatile i32* %sc... (idx: 1)        32                            33                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %23 = load volatile i32* %sc... (idx: 0)        0                             1                             
  %86 = load volatile i32* %sc... (idx: 1)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %86 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_0 (mux inputs: 32)
  %23 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 29)
State: pipeline_time_42
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %77 = load volatile i32* %sc... can share an input with another operation already assigned to main_mem_dual_port_1
  %77 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %78 = load volatile i32* %sc... can share an input with another operation already assigned to main_mem_dual_port_1
  %78 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %77 = load volatile i32* %sc... (idx: 0)        42                            24                            
  %78 = load volatile i32* %sc... (idx: 1)        42                            24                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %77 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %78 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %77 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 33)
  %78 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 29)
State: pipeline_time_43
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %34 = load volatile i32* %sc... can share an input with another operation already assigned to main_mem_dual_port_0
  %34 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %79 = load volatile i32* %sc... can share an input with another operation already assigned to main_mem_dual_port_1
  %79 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %34 = load volatile i32* %sc... (idx: 0)        33                            34                            
  %79 = load volatile i32* %sc... (idx: 1)        43                            24                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %34 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %79 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %34 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 33)
  %79 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 29)
State: pipeline_time_44
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %80 = load volatile i32* %sc... can share an input with another operation already assigned to main_mem_dual_port_1
  %80 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %81 = load volatile i32* %sc... can share an input with another operation already assigned to main_mem_dual_port_0
  %81 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %80 = load volatile i32* %sc... (idx: 0)        43                            24                            
  %81 = load volatile i32* %sc... (idx: 1)        33                            34                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %80 = load volatile i32* %sc... (idx: 0)        0                             1                             
  %81 = load volatile i32* %sc... (idx: 1)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %81 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_0 (mux inputs: 33)
  %80 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 29)
State: pipeline_time_45
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %25 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %82 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %25 = load volatile i32* %sc... (idx: 0)        43                            34                            
  %82 = load volatile i32* %sc... (idx: 1)        43                            34                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %25 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %82 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %25 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 34)
  %82 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 30)
State: pipeline_time_46
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %27 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %83 = load volatile i32* %sc... can share an input with another operation already assigned to main_mem_dual_port_0
  %83 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %27 = load volatile i32* %sc... (idx: 0)        44                            35                            
  %83 = load volatile i32* %sc... (idx: 1)        34                            35                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %27 = load volatile i32* %sc... (idx: 0)        0                             1                             
  %83 = load volatile i32* %sc... (idx: 1)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %83 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_0 (mux inputs: 34)
  %27 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 31)
State: pipeline_time_47
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %84 = load volatile i32* %sc... can share an input with another operation already assigned to main_mem_dual_port_1
  %84 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %85 = load volatile i32* %sc... can share an input with another operation already assigned to main_mem_dual_port_0
  %85 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %84 = load volatile i32* %sc... (idx: 0)        44                            26                            
  %85 = load volatile i32* %sc... (idx: 1)        34                            36                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %84 = load volatile i32* %sc... (idx: 0)        0                             1                             
  %85 = load volatile i32* %sc... (idx: 1)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %85 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_0 (mux inputs: 34)
  %84 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 31)
State: pipeline_time_48
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %26 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
  %33 = load volatile i32* %sc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %26 = load volatile i32* %sc... (idx: 0)        44                            36                            
  %33 = load volatile i32* %sc... (idx: 1)        44                            36                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %26 = load volatile i32* %sc... (idx: 0)        1                             0                             
  %33 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %26 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 35)
  %33 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 32)
State: pipeline_time_49
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile i32 %157, i32... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile i32 %157, i32... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile i32 %215, i32... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile i32 %215, i32... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile i32 %157, i32... (idx: 0)        50                            47                            
  store volatile i32 %215, i32... (idx: 1)        50                            47                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile i32 %157, i32... (idx: 0)        1                             0                             
  store volatile i32 %215, i32... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile i32 %157, i32... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 37)
  store volatile i32 %215, i32... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 34)
State: pipeline_time_50
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile i32 %99, i32*... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile i32 %99, i32*... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile i32 %273, i32... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile i32 %273, i32... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile i32 %99, i32*... (idx: 0)        52                            49                            
  store volatile i32 %273, i32... (idx: 1)        52                            49                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile i32 %99, i32*... (idx: 0)        1                             0                             
  store volatile i32 %273, i32... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile i32 %99, i32*... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 39)
  store volatile i32 %273, i32... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 36)
State: pipeline_time_51
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile i32 %41, i32*... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile i32 %41, i32*... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile i32 %281, i32... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile i32 %281, i32... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile i32 %41, i32*... (idx: 0)        54                            51                            
  store volatile i32 %281, i32... (idx: 1)        54                            51                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile i32 %41, i32*... (idx: 0)        1                             0                             
  store volatile i32 %281, i32... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile i32 %41, i32*... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 41)
  store volatile i32 %281, i32... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 38)
State: pipeline_time_52
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile i32 %107, i32... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile i32 %107, i32... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile i32 %165, i32... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile i32 %165, i32... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile i32 %107, i32... (idx: 0)        56                            53                            
  store volatile i32 %165, i32... (idx: 1)        56                            53                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile i32 %107, i32... (idx: 0)        1                             0                             
  store volatile i32 %165, i32... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile i32 %107, i32... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 43)
  store volatile i32 %165, i32... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 40)
State: pipeline_time_53
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile i32 %49, i32*... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile i32 %49, i32*... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile i32 %223, i32... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile i32 %223, i32... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile i32 %49, i32*... (idx: 0)        58                            55                            
  store volatile i32 %223, i32... (idx: 1)        58                            55                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile i32 %49, i32*... (idx: 0)        1                             0                             
  store volatile i32 %223, i32... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile i32 %49, i32*... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 45)
  store volatile i32 %223, i32... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 42)
State: pipeline_time_54
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile i32 %110, i32... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile i32 %110, i32... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile i32 %168, i32... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile i32 %168, i32... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile i32 %110, i32... (idx: 0)        60                            57                            
  store volatile i32 %168, i32... (idx: 1)        60                            57                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile i32 %110, i32... (idx: 0)        1                             0                             
  store volatile i32 %168, i32... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile i32 %110, i32... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 47)
  store volatile i32 %168, i32... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 44)
State: pipeline_time_55
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile i32 %226, i32... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile i32 %226, i32... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile i32 %284, i32... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile i32 %284, i32... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile i32 %226, i32... (idx: 0)        62                            59                            
  store volatile i32 %284, i32... (idx: 1)        62                            59                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile i32 %226, i32... (idx: 0)        1                             0                             
  store volatile i32 %284, i32... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile i32 %226, i32... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 49)
  store volatile i32 %284, i32... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 46)
State: pipeline_time_56
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store volatile i32 %52, i32*... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile i32 %52, i32*... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile i32 %73, i32*... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile i32 %73, i32*... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile i32 %52, i32*... (idx: 0)        64                            61                            
  store volatile i32 %73, i32*... (idx: 1)        64                            61                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store volatile i32 %52, i32*... (idx: 0)        1                             0                             
  store volatile i32 %73, i32*... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile i32 %52, i32*... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 51)
  store volatile i32 %73, i32*... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 48)
State: pipeline_time_57
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %111 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_0
  %111 = load volatile i32* %s... can share an input with another operation already assigned to main_mem_dual_port_1
  %111 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile i32 %131, i32... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile i32 %131, i32... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %111 = load volatile i32* %s... (idx: 0)        56                            43                            
  store volatile i32 %131, i32... (idx: 1)        66                            63                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %111 = load volatile i32* %s... (idx: 0)        0                             1                             
  store volatile i32 %131, i32... (idx: 1)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile i32 %131, i32... (idx: 1) -> main_mem_dual_port_0 (mux inputs: 53)
  %111 = load volatile i32* %s... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 48)
State: pipeline_time_58
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %169 = load volatile i32* %s... can share an input with another operation already assigned to main_mem_dual_port_0
  %169 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_0
  %169 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile i32 %189, i32... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile i32 %189, i32... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %169 = load volatile i32* %s... (idx: 0)        48                            53                            
  store volatile i32 %189, i32... (idx: 1)        68                            63                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %169 = load volatile i32* %s... (idx: 0)        1                             0                             
  store volatile i32 %189, i32... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %169 = load volatile i32* %s... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 53)
  store volatile i32 %189, i32... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 50)
State: pipeline_time_59
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %227 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_0
  %227 = load volatile i32* %s... can share an input with another operation already assigned to main_mem_dual_port_1
  %227 = load volatile i32* %s... can share an output register with another operation already assigned to main_mem_dual_port_1
  store volatile i32 %247, i32... can share an input with another operation already assigned to main_mem_dual_port_0
  store volatile i32 %247, i32... can share an output register with another operation already assigned to main_mem_dual_port_0
  store volatile i32 %247, i32... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %227 = load volatile i32* %s... (idx: 0)        58                            45                            
  store volatile i32 %247, i32... (idx: 1)        58                            65                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %227 = load volatile i32* %s... (idx: 0)        0                             1                             
  store volatile i32 %247, i32... (idx: 1)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store volatile i32 %247, i32... (idx: 1) -> main_mem_dual_port_0 (mux inputs: 54)
  %227 = load volatile i32* %s... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 50)
State: LEGUP_F_main_BB__306
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %307 = load volatile i32* ge... can share an output register with another operation already assigned to main_mem_dual_port_0
  %307 = load volatile i32* ge... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %307 = load volatile i32* ge... (idx: 0)        49                            45                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %307 = load volatile i32* ge... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %307 = load volatile i32* ge... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 50)

